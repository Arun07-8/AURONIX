<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>LapKart - Shop</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link href="/css/userside-css/userside-css/Header.css" rel="stylesheet" type="text/css">
    <link href="/css/userside-css/userside-css/shopPge.css" rel="stylesheet" type="text/css">
    <link href="/css/userside-css/userside-css/shop-modern.css" rel="stylesheet" type="text/css">
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">

    <!-- Custom Styles for Design Matching -->
    <style>
        /* General Layout */
        .shop-main {
            font-family: 'Poppins', sans-serif;
            background-color: #f5f5f5;
        }

        .container-fluid {
            max-width: 1400px;
            margin: 0 auto;
            padding: 20px;
        }

        /* Breadcrumb */
        .breadcrumb-nav {
            margin-bottom: 20px;
        }

        .breadcrumb {
            background: none;
            padding: 0;
        }

        .breadcrumb-item a {
            color: #666;
            text-decoration: none;
        }

        .breadcrumb-item.active {
            color: #000;
        }

        /* Filters Sidebar */
        .filters-sidebar {
            background: #fff;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        }

        .filters-header h2 {
            font-size: 20px;
            font-weight: 600;
            margin-bottom: 15px;
        }

        .filter-group {
            margin-bottom: 20px;
        }

        .filter-group label {
            font-size: 14px;
            font-weight: 500;
            color: #333;
            margin-bottom: 8px;
            display: block;
        }

        .form-select {
            border: 1px solid #ddd;
            border-radius: 4px;
            padding: 8px;
            font-size: 14px;
        }

        .price-range {
            margin-top: 10px;
        }

        .price-inputs {
            display: flex;
            justify-content: space-between;
            font-size: 14px;
            color: #666;
        }

        .filter-actions {
            display: flex;
            gap: 10px;
        }

        .btn-apply {
            background: #ff4d4d;
            color: #fff;
            border: none;
            padding: 10px 20px;
            border-radius: 4px;
            font-size: 14px;
        }

        .btn-clear {
            color: #666;
            text-decoration: none;
            padding: 10px 20px;
            font-size: 14px;
        }

        /* Products Section */
        .products-section {
            padding: 20px;
        }

        .products-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .products-header h1 {
            font-size: 24px;
            font-weight: 600;
            color: #333;
        }

        .products-tools {
            display: flex;
            gap: 15px;
            align-items: center;
        }

        .search-box {
            position: relative;
        }

        #search-input {
            border: 1px solid #ddd;
            border-radius: 4px;
            padding: 8px 40px 8px 12px;
            font-size: 14px;
            width: 200px;
        }

        #search-btn {
            position: absolute;
            right: 10px;
            top: 50%;
            transform: translateY(-50%);
            background: none;
            border: none;
            color: #666;
        }

        .sort-box {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .sort-box label {
            font-size: 14px;
            color: #333;
        }

        #sort-select {
            border: 1px solid #ddd;
            border-radius: 4px;
            padding: 8px;
            font-size: 14px;
        }

        .products-count {
            font-size: 14px;
            color: #666;
        }

        /* Products Grid */
        .products-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
            gap: 20px;
        }

        .product-card {
            background: #fff;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
            overflow: hidden;
            position: relative;
            transition: all 0.3s ease;
        }

        .product-link {
            text-decoration: none;
            color: inherit;
            display: block;
        }

        .product-image {
            width: 100%;
            height: 200px;
            display: flex;
            justify-content: center;
            align-items: center;
            background: #f9f9f9;
        }

        .product-image img {
            max-width: 100%;
            max-height: 100%;
            object-fit: contain;
        }

        .product-info {
            padding: 15px;
            text-align: center;
        }

        .product-name {
            font-size: 16px;
            font-weight: 500;
            color: #333;
            margin-bottom: 10px;
            height: 40px;
            overflow: hidden;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
        }

        .product-price {
            margin-bottom: 10px;
        }

        .current-price {
            font-size: 16px;
            font-weight: 600;
            color: #333;
        }

        .original-price {
            font-size: 14px;
            color: #999;
            text-decoration: line-through;
            margin-left: 8px;
        }

        .discount {
            font-size: 14px;
            color: #ff4d4d;
            margin-left: 8px;
        }

        /* Wishlist Button */
        .product-badges {
            position: absolute;
            top: 10px;
            right: 10px;
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .product-card:hover .product-badges {
            opacity: 1;
        }

        .wishlist-btn {
            background: none;
            border: none;
            cursor: pointer;
            padding: 5px;
        }

        .wishlist-btn svg {
            width: 20px;
            height: 20px;
            stroke: #333;
        }

        .wishlist-btn.active svg {
            fill: #ff4d4d;
            stroke: #ff4d4d;
        }

        /* Add to Cart / Out of Stock */
        .add-to-cart-btn {
            display: block;
            width: 100%;
            background: #000;
            color: #fff;
            border: none;
            padding: 12px;
            font-size: 14px;
            font-weight: 500;
            border-radius: 0 0 8px 8px;
            cursor: pointer;
            transition: background 0.3s ease;
        }

        .add-to-cart-btn:hover {
            background: #333;
        }

        .out-of-stock {
            display: block;
            width: 100%;
            background: #f0f0f0;
            color: #666;
            border: none;
            padding: 12px;
            font-size: 14px;
            font-weight: 500;
            border-radius: 0 0 8px 8px;
            text-align: center;
        }

        /* Pagination */
        .pagination {
            margin-top: 30px;
            display: flex;
            justify-content: center;
        }

        .pagination-list {
            display: flex;
            gap: 10px;
            list-style: none;
            padding: 0;
        }

        .page-link {
            padding: 8px 12px;
            border: 1px solid #ddd;
            border-radius: 4px;
            color: #333;
            text-decoration: none;
            font-size: 14px;
        }

        .page-link:hover {
            background: #f0f0f0;
        }

        .pagination-list .active .page-link {
            background: #ff4d4d;
            color: #fff;
            border-color: #ff4d4d;
        }

        /* Responsive */
        @media (max-width: 768px) {
            .products-grid {
                grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));
            }

            .filters-content {
                display: none;
            }

            .filters-content.show {
                display: block;
            }

            .filter-toggle {
                display: block !important;
            }
        }
    </style>
</head>

<body>
    <%- include("../../views/partials/user/header") %>

        <main class="shop-main">
            <div class="container-fluid">
                <!-- Breadcrumb -->
                <nav class="breadcrumb-nav" aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="/home">Home</a></li>
                        <li class="breadcrumb-item"><a href="/shop">Shop</a></li>
                        <li class="breadcrumb-item active" id="breadcrumb-category">
                            <%= categoryName || 'All Products' %>
                        </li>
                    </ol>
                </nav>

                <div class="shop-layout">
                    <!-- Filters Sidebar -->
                    <aside class="filters-sidebar">
                        <div class="filters-header">
                            <h2>Filters</h2>
                            <button class="filter-toggle" id="filter-toggle">
                                <i class="fas fa-filter"></i>
                                <span>Show Filters</span>
                            </button>
                        </div>

                        <div class="filters-content">
                            <form id="filter-form" action="/shop" method="GET">
                                <!-- Category Filter -->
                                <div class="filter-group">
                                    <label for="category-select">Category</label>
                                    <select id="category-select" name="category" class="form-select">
                                        <option value="all">All Categories</option>
                                        <% category.forEach(cat=> { %>
                                            <option value="<%= cat._id %>" <%=filters.category===cat._id.toString()
                                                ? 'selected' : '' %>><%= cat.name %>
                                            </option>
                                            <% }) %>
                                    </select>
                                </div>

                                <!-- Brand Filter -->
                                <div class="filter-group">
                                    <label for="brand-select">Brand</label>
                                    <select id="brand-select" name="brand" class="form-select">
                                        <option value="all">All Brands</option>
                                        <% brand.forEach(b=> { %>
                                            <option value="<%= b._id %>" <%=filters.brand===b._id.toString()
                                                ? 'selected' : '' %>><%= b.name %>
                                            </option>
                                            <% }) %>
                                    </select>
                                </div>

                                <!-- Price Range Filter -->
                                <div class="filter-group">
                                    <label>Price Range</label>
                                    <div class="price-range">
                                        <div class="price-slider-container">
                                            <div class="price-slider-track"></div>
                                            <input type="range" id="price-min" name="priceMin" min="20000" max="150000"
                                                step="5000" value="<%= filters.priceMin || 20000 %>">
                                            <input type="range" id="price-max" name="priceMax" min="20000" max="150000"
                                                step="5000" value="<%= filters.priceMax || 150000 %>">
                                        </div>
                                        <div class="price-inputs">
                                            <span>₹<%= (filters.priceMin || 20000).toLocaleString('en-IN') %></span>
                                            <span>₹<%= (filters.priceMax || 150000).toLocaleString('en-IN') %></span>
                                        </div>
                                    </div>
                                </div>

                                <input type="hidden" name="sort" value="<%= filters.sort || 'popular' %>">
                                <input type="hidden" name="page" value="1">
                                <input type="hidden" name="search" value="<%= filters.search || '' %>">

                                <div class="filter-actions">
                                    <button type="submit" class="btn-apply">Apply Filters</button>
                                    <a href="/shop" class="btn-clear">Clear All</a>
                                </div>
                            </form>
                        </div>
                    </aside>

                    <!-- Products Section -->
                    <section class="products-section">
                        <!-- Products Header -->
                        <div class="products-header">
                            <h1 id="category-heading">
                                <%= categoryName || 'All Products' %>
                            </h1>
                            <div class="products-tools">
                                <!-- Update the search-box in the products-header section -->
                                <div class="search-box">
                                    <input type="text" id="search-input" placeholder="Search products..."
                                        value="<%= filters.search || '' %>">
                                    <button type="button" id="search-btn" aria-label="Search">
                                        <i class="fas fa-search"></i>
                                    </button>
                                </div>
                                <div class="sort-box">
                                    <label for="sort-select">Sort by:</label>
                                    <select id="sort-select" class="form-select">
                                        <option value="popular" <%=filters.sort==='popular' ? 'selected' : '' %>>Most
                                            Popular</option>
                                        <option value="price-low" <%=filters.sort==='price-low' ? 'selected' : '' %>
                                            >Price: Low to High</option>
                                        <option value="price-high" <%=filters.sort==='price-high' ? 'selected' : '' %>
                                            >Price: High to Low</option>
                                        <option value="name-asc" <%=filters.sort==='name-asc' ? 'selected' : '' %>>Name:
                                            A to Z</option>
                                        <option value="name-desc" <%=filters.sort==='name-desc' ? 'selected' : '' %>
                                            >Name: Z to A</option>
                                    </select>
                                </div>
                            </div>
                            <div class="products-count">
                                Showing <%= (currentPage - 1) * limit + 1 %>-<%= Math.min(currentPage * limit,
                                        totalProducts) %> of <%= totalProducts %> products
                            </div>
                        </div>

<div class="products-grid" id="product-grid">
    <% if (product.length===0) { %>
        <div class="no-products">
            <i class="fas fa-search"></i>
            <p>No products found matching your criteria</p>
            <a href="/shop" class="btn-browse">Browse All Products</a>
        </div>
    <% } else { %>
        <% product.forEach(product=> { %>
            <article class="product-card">
                <div class="product-badges">
                    <% if (product.sponsored) { %>
                        <span class="badge sponsored">Sponsored</span>
                    <% } %>
                    <button class="wishlist-btn" aria-label="Add to wishlist"  data-product-id="<%= product._id %>">
                        <a href="/wishlist/add" aria-label="Wishlist">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24"
                                height="24" viewBox="0 0 24 24" fill="none"
                                stroke="currentColor" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round">
                                <path
                                    d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z">
                                </path>
                            </svg>
                        </a>
                    </button>
                </div>

                <a href="/productview?id=<%= product._id %>" class="product-link">
                    <div class="product-image">
                        <img src="<%= product.productImage[0] %>"
                            alt="<%= product.productName %>"
                            class="<%= product.quantity <= 0 ? 'out-of-stock-image' : '' %>">
                    </div>
                    <div class="product-info">
                        <h3 class="product-name">
                            <%= product.productName %>
                        </h3>
                       <div class="product-price">

  <span class="current-price">₹<%= product.discountedPrice.toLocaleString('en-IN') %></span>


  <% if (product.discountedPrice < product.salePrice) { %>
    <span class="original-price text-muted text-decoration-line-through">
      ₹<%= product.salePrice.toLocaleString('en-IN') %>
    </span>

    <% 
      let discount = Math.round(((product.salePrice - product.discountedPrice) / product.salePrice) * 100); 
    %>
    <span class="discount badge bg-danger ms-2">
      <%= discount %>% OFF
    </span>
  <% } %>
</div>

                    </div>
                </a>

                <% if (product.quantity <= 0) { %>
                    <div class="out-of-stock">
                        Out of Stock
                    </div>
                <% } else { %>
                    <button class="add-to-cart-btn" 
                            data-product-id="<%= product._id %>"
                            data-product-name="<%= product.productName %>"
                            data-product-price="<%= product.salePrice %>">
                        <i class="fas fa-shopping-cart"></i> Add to Cart
                    </button>
                <% } %>
            </article>
        <% }) %>
    <% } %>
</div>
                        <!-- Pagination -->
                        <% if (totalPages> 1) { %>
                            <nav class="pagination" aria-label="Product pagination">
                                <ul class="pagination-list">
                                    <% if (currentPage> 1) { %>
                                        <li>
                                            <a href="/shop?page=<%= currentPage - 1 %>&category=<%= filters.category || 'all' %>&brand=<%= filters.brand || 'all' %>&priceMin=<%= filters.priceMin || 20000 %>&priceMax=<%= filters.priceMax || 150000 %>&sort=<%= filters.sort || 'popular' %>&search=<%= filters.search || '' %>"
                                                class="page-link">
                                                <i class="fas fa-chevron-left"></i> Previous
                                            </a>
                                        </li>
                                        <% } %>

                                            <% for (let i=1; i <=totalPages; i++) { %>
                                                <li class="<%= i === currentPage ? 'active' : '' %>">
                                                    <a href="/shop?page=<%= i %>&category=<%= filters.category || 'all' %>&brand=<%= filters.brand || 'all' %>&priceMin=<%= filters.priceMin || 20000 %>&priceMax=<%= filters.priceMax || 150000 %>&sort=<%= filters.sort || 'popular' %>&search=<%= filters.search || '' %>"
                                                        class="page-link">
                                                        <%= i %>
                                                    </a>
                                                </li>
                                                <% } %>

                                                    <% if (currentPage < totalPages) { %>
                                                        <li>
                                                            <a href="/shop?page=<%= currentPage + 1 %>&category=<%= filters.category || 'all' %>&brand=<%= filters.brand || 'all' %>&priceMin=<%= filters.priceMin || 20000 %>&priceMax=<%= filters.priceMax || 150000 %>&sort=<%= filters.sort || 'popular' %>&search=<%= filters.search || '' %>"
                                                                class="page-link">
                                                                Next <i class="fas fa-chevron-right"></i>
                                                            </a>
                                                        </li>
                                                        <% } %>
                                </ul>
                            </nav>
                            <% } %>
                    </section>
                </div>
            </div>
        </main>

        <%- include("../../views/partials/user/footer") %>

            <!-- SweetAlert2 JS -->
            <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
            <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
            <script>
                document.addEventListener('DOMContentLoaded', function () {
                    initPriceRangeSlider();
                    initFilterToggle();
                    initWishlistButtons();
                    initAddToCartButtons();
                    initFilterForm();
                    initSortSelect();
                    initSearchInput();
                    checkMobileView();
                initAddToWishlistButton();

                    let resizeTimeout;
                    window.addEventListener('resize', () => {
                        clearTimeout(resizeTimeout);
                        resizeTimeout = setTimeout(checkMobileView, 100);
                    });
                });

                function initPriceRangeSlider() {
                    // Price range slider implementation
                    const priceMin = document.getElementById('price-min');
                    const priceMax = document.getElementById('price-max');
                    
                    if (priceMin && priceMax) {
                        function updatePriceDisplay() {
                            const minVal = parseInt(priceMin.value);
                            const maxVal = parseInt(priceMax.value);
                            
                            if (minVal >= maxVal) {
                                priceMin.value = maxVal - 5000;
                            }
                            
                            document.querySelector('.price-inputs span:first-child').textContent = 
                                '₹' + parseInt(priceMin.value).toLocaleString('en-IN');
                            document.querySelector('.price-inputs span:last-child').textContent = 
                                '₹' + parseInt(priceMax.value).toLocaleString('en-IN');
                        }
                        
                        priceMin.addEventListener('input', updatePriceDisplay);
                        priceMax.addEventListener('input', updatePriceDisplay);
                    }
                }

                function initFilterToggle() {
                    const filterToggle = document.getElementById('filter-toggle');
                    const filtersContent = document.querySelector('.filters-content');
                    
                    if (filterToggle && filtersContent) {
                        filterToggle.addEventListener('click', () => {
                            filtersContent.classList.toggle('show');
                        });
                    }
                }

                function initWishlistButtons() {
                    const wishlistBtns = document.querySelectorAll('.wishlist-btn');
                    wishlistBtns.forEach(btn => {
                        btn.addEventListener('click', (e) => {
                            e.preventDefault();
                            e.stopPropagation();
                            btn.classList.toggle('active');
                        });
                    });
                }

                function initFilterForm() {
                    const filterForm = document.getElementById('filter-form');
                    if (filterForm) {
                        const selects = filterForm.querySelectorAll('select, input[type="range"]');
                        selects.forEach(select => {
                            select.addEventListener('change', () => {
                                filterForm.submit();
                            });
                        });
                    }
                }

                function initSortSelect() {
                    const sortSelect = document.getElementById('sort-select');
                    if (sortSelect) {
                        sortSelect.addEventListener('change', () => {
                            const params = new URLSearchParams(window.location.search);
                            params.set('sort', sortSelect.value);
                            params.set('page', '1');
                            window.location.href = `/shop?${params.toString()}`;
                        });
                    }
                }

                function initSearchInput() {
                    const searchInput = document.getElementById('search-input');
                    const searchBtn = document.getElementById('search-btn');
                    if (!searchInput || !searchBtn) return;

                    let debounceTimeout;
                    const debounceSearch = (value) => {
                        clearTimeout(debounceTimeout);
                        debounceTimeout = setTimeout(() => {
                            const searchTerm = value.trim();
                            if (searchTerm.length === 0) {
                                Swal.fire({
                                    icon: 'warning',
                                    title: 'Search Required',
                                    text: 'Please enter a search term',
                                    toast: true,
                                    position: 'top-end',
                                    showConfirmButton: false,
                                    timer: 3000
                                });
                                return;
                            }
                            const params = new URLSearchParams(window.location.search);
                            params.set('search', searchTerm);
                            params.set('page', '1');
                            window.location.href = `/shop?${params.toString()}`;
                        }, 500);
                    };

                    searchInput.addEventListener('keypress', (e) => {
                        if (e.key === 'Enter') {
                            e.preventDefault();
                            debounceSearch(searchInput.value);
                        }
                    });

                    searchBtn.addEventListener('click', (e) => {
                        e.preventDefault();
                        debounceSearch(searchInput.value);
                    });
                }

                function checkMobileView() {
                    const filtersContent = document.querySelector('.filters-content');
                    const filterToggle = document.getElementById('filter-toggle');
                    
                    if (window.innerWidth <= 768) {
                        if (filtersContent) filtersContent.classList.remove('show');
                        if (filterToggle) filterToggle.style.display = 'block';
                    } else {
                        if (filtersContent) filtersContent.classList.add('show');
                        if (filterToggle) filterToggle.style.display = 'none';
                    }
                }

                // Updated initAddToCartButtons function with centered SweetAlert messages
                function initAddToCartButtons() {
                    const buttons = document.querySelectorAll('.add-to-cart-btn');
                    buttons.forEach(button => {
                        button.addEventListener('click', async function (e) {
                            e.preventDefault();
                            e.stopPropagation();
                            
                            const productId = this.dataset.productId;
                            const productName = this.dataset.productName;
                            const price = parseFloat(this.dataset.productPrice);
                            const quantity = 1;

                            // Disable button and show loading state
                            const originalText = this.innerHTML;
                            this.disabled = true;
                            this.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Adding...';

                            try {
                                const res = await fetch('/cart/add', {
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': 'application/json',
                                    },
                                    body: JSON.stringify({ productId, price, quantity }),
                                });

                                const data = await res.json();

                                if (data.success) {
                                    // Success message with centered SweetAlert
                                    await Swal.fire({
                                        icon: 'success',
                                        title: 'Added to Cart!',
                                        text: `${productName} has been successfully added to your cart.`,
                                        position: 'center', // Changed from 'top-end' to 'center'
                                        showConfirmButton: true,
                                        confirmButtonText: 'OK',
                                        timer: 3000,
                                        timerProgressBar: true
                                    });
                                } else {
                                    // Error message with centered SweetAlert
                                    await Swal.fire({
                                        icon: 'error',
                                        title: 'Failed to Add',
                                        text: data.message || 'Something went wrong while adding to cart.',
                                        position: 'center', // Changed from 'top-end' to 'center'
                                        showConfirmButton: true,
                                        confirmButtonText: 'OK',
                                        timer: 4000,
                                        timerProgressBar: true
                                    });
                                }
                            } catch (err) {
                                console.error('Add to cart error:', err);
                                // Network error message with centered SweetAlert
                                await Swal.fire({
                                    icon: 'error',
                                    title: 'Network Error',
                                    text: 'Server error. Please try again later.',
                                    position: 'center', // Changed from 'top-end' to 'center'
                                    showConfirmButton: true,
                                    confirmButtonText: 'OK',
                                    timer: 4000,
                                    timerProgressBar: true
                                });
                            } finally {
                                // Re-enable button and restore original text
                                this.disabled = false;
                                this.innerHTML = originalText;
                            }
                        });
                    });
                }


              // Updated Wishlist Function
    function initAddToWishlistButton() {
        const buttons = document.querySelectorAll('.wishlist-btn'); // Corrected variable name
        buttons.forEach(button => {
            button.addEventListener('click', async function (e) {
                e.preventDefault(); // Prevent default navigation
                e.stopPropagation();

                const productId = this.dataset.productId;
                const productName = this.dataset.productName; // Now defined in HTML

                // Disable button and show loading state
                const originalContent = this.innerHTML;
                this.disabled = true;
                this.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Adding...';

                try {
                    const res = await fetch('/wishlist/add', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ productId }),
                    });

                    const data = await res.json();

                    if (data.success) {
                        // Toggle active class to show the product is in the wishlist
                        this.classList.add('active');

                        // Success message with centered SweetAlert
                        await Swal.fire({
                            icon: 'success',
                            title: 'Added to Wishlist!',
                            position: 'center',
                            showConfirmButton: true,
                            confirmButtonText: 'OK',
                            timer: 3000,
                            timerProgressBar: true
                        });
                    } else {
                        // Error message with centered SweetAlert
                        await Swal.fire({
                            icon: 'error',
                            title: 'Failed to Add',
                            text: data.message || 'Something went wrong while adding to wishlist.',
                            position: 'center',
                            showConfirmButton: true,
                            confirmButtonText: 'OK',
                            timer: 4000,
                            timerProgressBar: true
                        });
                    }
                } catch (err) {
                    console.error('Add to wishlist error:', err);
                    // Network error message with centered SweetAlert
                    await Swal.fire({
                        icon: 'error',
                        title: 'Network Error',
                        text: 'Server error. Please try again later.',
                        position: 'center',
                        showConfirmButton: true,
                        confirmButtonText: 'OK',
                        timer: 4000,
                        timerProgressBar: true
                    });
                } finally {
                    // Re-enable button and restore original content
                    this.disabled = false;
                    this.innerHTML = originalContent;
                }
            });
        });
    }
                
            </script>
</body>

</html>