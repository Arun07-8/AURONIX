<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Forgot Password - Auronix</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">
</head>
<style>
    /* ... existing styles ... */

/* Form Container and Spacing */
.form-container {
    width: 100%;
    max-width: 550px;
    margin: 0 auto;
    padding: 3.5rem;  /* Increased padding */
}

.form-content {
    margin-bottom: 2rem;  /* Added space after form content */
}

/* Title and Subtitle Spacing */
.title {
    font-size: 3rem;
    font-weight: 600;
    color: #1a1a1a;
    margin-bottom: 1.5rem;
    letter-spacing: -0.5px;
}

.subtitle {
    color: #666;
    font-size: 1.2rem;
    line-height: 1.6;
    margin-bottom: 3rem;  /* Increased space before form */
    padding: 0 25px;
}

/* Form Group and Input Spacing */
.form-group {
    margin-bottom: 2.5rem;  /* Increased space between form elements */
    position: relative;
}

.form-control {
    height: 60px;
    border: 1px solid #e0e0e0;
    border-radius: 10px;
    padding: 1rem 1.5rem;
    font-size: 1.1rem;
    width: 100%;
    margin-bottom: 1rem;  /* Space after input field */
}

.form-control:focus {
    border-color: #1a1a1a;
    box-shadow: none;
    outline: none;
}

/* Submit Button Spacing */
.submit-btn {
    height: 60px;
    background-color: #1a1a1a;
    border: none;
    border-radius: 10px;
    font-weight: 500;
    font-size: 1.2rem;
    margin-bottom: 2.5rem;  /* Increased space after button */
    transition: all 0.3s ease;
}

/* Login Link Container Spacing */
.login-link-container {
    margin-top: 2rem;  /* Space above login link */
    padding: 1rem 0;   /* Vertical padding */
}

.login-link-container p {
    font-size: 1.1rem;
    margin: 0;
}

/* Error Message Spacing */
.error-message {
    margin-top: 0.5rem;
    margin-bottom: 1rem;
    font-size: 0.875rem;
    color: #dc2626;
}

/* Responsive Adjustments */
@media (max-width: 768px) {
    .form-container {
        padding: 2rem;
    }

    .subtitle {
        margin-bottom: 2.5rem;  /* Adjusted for mobile */
    }

    .form-group {
        margin-bottom: 2rem;  /* Adjusted for mobile */
    }

    .form-control {
        height: 55px;
        margin-bottom: 0.8rem;
    }

    .submit-btn {
        margin-bottom: 2rem;
    }
}

@media (max-width: 375px) {
    .form-container {
        padding: 1.5rem;
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

    .subtitle {
        margin-bottom: 2rem;
    }

    .form-control {
        height: 50px;
        margin-bottom: 0.6rem;
    }

    .submit-btn {
        margin-bottom: 1.5rem;
    }
}

/* Updated Logo Side Styling */
.logo-side {
    background-color: #000000;
    min-height: 100vh;
    position: relative;
    overflow: hidden;
}

.logo-container {
    position: relative;
    z-index: 2;
    width: 100%;
    height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
}

.logo {
    width: 100%;
    height: 100%;
    object-fit: cover;  /* Changed to cover to fill the container */
    position: absolute;
    top: 0;
    left: 0;
}

/* Wave Effect - Updated */
.logo-side::after {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background: linear-gradient(
        45deg,
        rgba(0, 0, 0, 0.3) 0%,
        rgba(0, 0, 0, 0.1) 100%
    );
    z-index: 2;
}

/* Responsive Design */
@media (max-width: 768px) {
    .logo-side {
        min-height: 300px;  /* Increased height on mobile */
        order: -1;
    }

    .logo-container {
        height: 300px;  /* Match container height */
    }

    .logo {
        height: 100%;
        object-position: center;  /* Center the image */
    }
}

@media (min-width: 769px) {
    .logo-side {
        position: fixed;
        right: 0;
        width: 50%;
        height: 100vh;
    }

    .form-side {
        width: 50%;
    }

    .logo-container {
        height: 100vh;
    }
}

/* Fix for potential overflow issues */
.container-fluid {
    overflow-x: hidden;
}

/* Ensure proper stacking */
.row {
    display: flex;
    flex-wrap: wrap;
}
</style>
<bo<div class="container-fluid p-0">
    <div class="row g-0 min-vh-100">
      <!-- Form side - Left -->
      <div class="col-12 col-md-6 form-side d-flex align-items-center justify-content-center">
        <div class="form-container text-center">
          <div class="form-content">
            <h1 class="title">Forgot Password?</h1>
            <p class="subtitle">Don't worry! It occurs. Please enter the email address linked with your account.</p>

            <form id="emailform" class="forgot-form">
              <div class="form-group">
                <input type="email" class="form-control" name="email" id="email" placeholder="Enter your email" required>
                <div class="error-message" id="email-error"></div>
              </div>
              <button type="submit" class="btn btn-dark w-100 submit-btn">Send Code</button>
              <div class="login-link-container">
                <p class="mb-0">Remember Password? <a href="/login" class="login-link">Login</a></p>
              </div>
            </form>
          </div>
        </div>
      </div>
      <!-- Logo side - Right -->
      <div class="col-12 col-md-6 logo-side">
        <div class="logo-container">
          <img src="/img/register/39654693f718ae57538bfb7bf41b217c.jpg" alt="Auronix Logo" class="logo">
        </div>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script>
    const form = document.getElementById('emailform');

    form.addEventListener('submit', async (event) => {
      event.preventDefault(); 
      const email = document.getElementById('email').value; 

      const emailError = document.getElementById('email-error');
      const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
      if (!email) {
        emailError.textContent = 'Please enter your email';
        return;
      } else if (!emailPattern.test(email)) {
        emailError.textContent = 'Please enter a valid email address';
        return;
      } else {
        emailError.textContent = '';
      }
      Swal.fire({
        title: 'Processing...',
        text: 'Please wait while we process your request.',
        allowOutsideClick: false,
        didOpen: () => {
          Swal.showLoading();
        },
      });

      try {
        
        const response = await fetch('/forgot-password', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ email }),
        });
        Swal.close();
        // Parse response
        const data = await response.json();

        // Close SweetAlert2 processing popup
        Swal.close();

        if (response.ok && data.success) {
           Swal.fire({
           icon: 'success',
           title: data.message,
           showConfirmButton: false,
           timer: 1500
        }).then(() => {
          window.location.href = '/Otp-verify'
         });

        } else {
          // Show error alert
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: data.message || 'Failed to process email.',
          });
        }
      } catch (error) {
        // Close SweetAlert2 processing popup
        Swal.close();

        // Show error alert
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: 'Something went wrong. Please try again.',
        });
        console.error('Fetch Error:', error);
      }
    });
  </script>
</body>
</html>

