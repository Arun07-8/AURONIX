<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, shrink-to-fit=no">
    <title>Create New Password -Lapmart</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&display=swap" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <link href="/css/userside-css/userside-css/Newpassword.css"  rel="stylesheet" type="text/css">
</head>
<body>
    <div class="form-container">
        <div class="form-content">
            <h1>Create new password</h1>
            <p>Your new password must be unique from those previously used.</p>
            
            <form id="formid">
                <div class="input-group">
                    <label for="password">Enter Your New Password</label>
                    <div style="position: relative;">
                        <input type="password" id="password" placeholder="New Password" name="newPass1">
                        <button type="button" class="toggle-password" data-target="password">
                            <i class="fas fa-eye toggle-icon"></i>
                        </button>
                    </div>
                    <div class="error-message" id="email-error"></div>
                </div>
                
                <div class="input-group">
                    <label for="confirmpassword">Confirm Password</label>
                    <div style="position: relative;">
                        <input type="password" id="confirmpassword" placeholder="Confirm Password" name="newPass2">
                        <button type="button" class="toggle-password" data-target="confirmpassword">
                            <i class="fas fa-eye toggle-icon"></i>
                        </button>
                    </div>
                    <div class="error-message" id="email-error2"></div>
                </div>
                
                <button type="submit" class="submit-button">Reset Password</button>
            </form>
        </div>
    </div>
    
    <div class="brand-container">

         <img src="img/register/Signup (1).png" class="brand-container"></div>
      
    </div>
    
    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert2/11.7.12/sweetalert2.all.min.js"></script>
    <script>
        const form = document.getElementById('formid');

        function hideError(errorElement) {
            errorElement.textContent = '';
        }

        function togglePassword(targetId) {
            try {
                const input = document.getElementById(targetId);
                const button = document.querySelector(`.toggle-password[data-target="${targetId}"]`);
                const icon = button.querySelector('.toggle-icon');

                if (!input || !icon) {
                    console.error(`Toggle password failed: input or icon not found for targetId=${targetId}`);
                    return;
                }

                if (input.type === 'password') {
                    input.type = 'text';
                    icon.classList.remove('fa-eye');
                    icon.classList.add('fa-eye-slash');
                } else {
                    input.type = 'password';
                    icon.classList.remove('fa-eye-slash');
                    icon.classList.add('fa-eye');
                }

                // Focus to ensure proper UI update
                input.focus();
                input.blur();
                console.debug(`Toggled password visibility for ${targetId}: type=${input.type}`);
            } catch (error) {
                console.error('Error in togglePassword:', error.message);
            }
        }

        // Add event listeners to toggle buttons
        document.querySelectorAll('.toggle-password').forEach(button => {
            button.addEventListener('click', () => {
                const targetId = button.getAttribute('data-target');
                togglePassword(targetId);
            });
        });

        form.addEventListener('submit', async (event) => {
            event.preventDefault();

            const passwordInput = document.getElementById('password');
            const confirmPasswordInput = document.getElementById('confirmpassword');
            const passwordError = document.getElementById('email-error');
            const confirmPasswordError = document.getElementById('email-error2');

            const passwordVal = passwordInput.value.trim();
            const cpasswordVal = confirmPasswordInput.value.trim();
            const strongpass = /^(?=.*[A-Za-z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/;
            let isValid = true;

            // Validate password
            if (!passwordVal) {
                passwordError.textContent = 'Password cannot be empty';
                isValid = false;
            } else if (passwordVal.length < 8) {
                passwordError.textContent = 'Password must be at least 8 characters';
                isValid = false;
            } else if (!strongpass.test(passwordVal)) {
                passwordError.textContent = 'Password must include at least one letter, one number, and one special character (@$!%*?&)';
                isValid = false;
            } else {
                hideError(passwordError);
            }

            // Validate confirm password
            if (!cpasswordVal) {
                confirmPasswordError.textContent = 'Confirm Password cannot be empty';
                isValid = false;
            } else if (passwordVal !== cpasswordVal) {
                confirmPasswordError.textContent = 'Passwords do not match';
                isValid = false;
            } else {
                hideError(confirmPasswordError);
            }

            if (!isValid) {
                return;
            }

            try {
                const response = await fetch('/reset-password', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                     newPass1: passwordVal,
                     newPass2: cpasswordVal
                    }),
                });

                const data = await response.json();

                if (response.ok && data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Password Reset Successfully',
                        showConfirmButton: false,
                        timer: 1500
                    }).then(() => {
                        window.location.href = data.redirectUrl || '/login';
                    });

                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: data.message || 'Failed to reset password. Please try again.',
                        showConfirmButton: false,
                        timer: 2000
                    });
                    if (data.message && data.message.includes('session')) {
                        setTimeout(() => {
                            window.location.href = '/forgot-password';
                        }, 2000);
                    }
                }
            } catch (error) {
                console.error('Reset password error:', error.message);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Failed to reset password. Please try again.',
                    showConfirmButton: false,
                    timer: 2000
                });
                if (error.message && error.message.includes('Failed to fetch')) {
                    setTimeout(() => {
                        window.location.href = '/forgot-password';
                    }, 2000);
                }
            }
        });
    </script>
</body>
</html> 