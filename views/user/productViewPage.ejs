<%- include("../../views/partials/user/header") %>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/magnific-popup.js/1.1.0/magnific-popup.min.css">
  <link rel="stylesheet" href="/css/userside-css/userside-css/productView.css" type="text/css">
   <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">
</head>
<body>
  <!-- Breadcrumb with Box Shadow -->
  <div class="container mt-3">
    <nav aria-label="breadcrumb">
      <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="#" class="text-decoration-none text-muted">Home</a></li>
        <li class="breadcrumb-item"><a href="#" class="text-decoration-none text-muted">Shop</a></li>
        <li class="breadcrumb-item active" aria-current="page">Laptops</li>
      </ol>
    </nav>
  </div>

  <!-- Product Section -->
  <div class="container mb-5">
    <div class="product-section">
<!-- Product Images Column -->
<div class="product-images">
  <!-- Thumbnail Images - Left Side Vertical -->
  <div class="product-thumbs-container">
    <% if (product.productImage && product.productImage.length > 0) { %>
      <% product.productImage.forEach((image, index) => { %>
        <div class="product-thumb <%= index === 0 ? 'active' : '' %>" data-index="<%= index %>">
          <img src="<%= image || '/images/placeholder.jpg' %>" alt="Product thumbnail <%= index + 1 %>">
        </div>
      <% }) %>
    <% } else { %>
      <div class="product-thumb active">
        <img src="/images/placeholder.jpg" alt="No image available">
      </div>
    <% } %>
  </div>
  
  <!-- Main Image Section - Right Side -->
  <div class="main-image-section">
    <!-- Main Product Image with Full Cover -->
    <div class="zoom-container" id="prod-image">
      <% if (product.productImage && product.productImage.length > 0) { %>
        <a href="<%= product.productImage[0] %>" class="image-popup">
          <img 
            src="<%= product.productImage[0] %>" 
            class="zoom-image" 
            alt="<%= product.productName %>" 
            id="image-sec"
          >
        </a>
        <div class="zoom-lens"></div>
      <% } else { %>
        <img 
          src="/images/placeholder.jpg" 
          class="zoom-image" 
          alt="No Image Available"
        >
      <% } %>
    </div>
    
    <!-- NEW: Offer Section Below Main Image -->
    <% if (product.offerPercentage > 0 || product.offerName) { %>
      <div class="offer-section">
        <div class="offer-badge">SPECIAL</div>
        <% if (product.offerName) { %>
          <h4><%= product.offerName %></h4>
        <% } else { %>
          <h4>Limited Time Offer</h4>
        <% } %>
        <% if (product.offerPercentage > 0) { %>
          <p>Save <%= product.offerPercentage %>% on this amazing product!</p>
        <% } else { %>
          <p>Don't miss out on this exclusive deal!</p>
        <% } %>
      </div>
    <% } %>
    
    <!-- Product Status Below Offer Section -->
 <% if (!product.isLocked && product.quantity === 0) { %>
  <div class="product-status text-danger">
    ✖ Out of Stock
  </div>
<% } %>

  </div>
</div>
<div class="product-info">
        <!-- Product Title with Wishlist Button -->
        <div class="product-title-section">
          <h1><%= product.productName %></h1>
          <button class="wishlist-btn <%= wishlistProductIds.includes(product._id.toString()) ? 'active' : ''%>" id="wishlist-btn"data-product-id="<%= product._id %>"
        data-product-name="<%= product.productName %>">
            <i class="far fa-heart"></i>
          </button>
        </div>
        
        <!-- Rating Section -->
        <div class="rating-section">
          <div class="rating">
            <i class="fas fa-star"></i>
            <i class="fas fa-star"></i>
            <i class="fas fa-star"></i>
            <i class="fas fa-star"></i>
            <i class="fas fa-star-half-alt"></i>
            <span>4.5/5</span>
          </div>
          <a href="/reviews" class="text-decoration-none">View all reviews</a>
        </div>
        
        <!-- Price Section -->
        <div class="price-section">
          <h2>
            ₹<%= product.discountedPrice ? product.discountedPrice.toLocaleString('en-IN') : product.salePrice.toLocaleString('en-IN') %>
          </h2>

          <% if (product.offerPercentage > 0) { %>
            <div class="d-flex align-items-center">
              <span class="old-price">₹<%= product.salePrice.toLocaleString('en-IN') %></span>
              <span class="discount">-<%= product.offerPercentage %>% OFF</span>
            </div>
          <% } else { %>
            <div class="text-muted small">
              No current offers
            </div>
          <% } %>
        </div>

        <!-- Product Description -->
        <div class="product-description">
          <p>This high-performance laptop is perfect for any task. Crafted with premium materials and cutting-edge technology, it offers superior performance and reliability.</p>
        </div>
        
        <!-- Specifications -->
        <div class="specs-section">
          <h6>Processor: <%= product.processor %></h6>
          <h6>RAM: <%= product.ram %></h6>
          <h6>Storage: <%= product.Storage %></h6>
        </div>

        <input type="hidden" id="product-id" value="<%= product._id %>">
        <input type="hidden" id="price" value="<%= product.salePrice %>">
        
        <div class="quantity-section">
          <div class="quantity-controls">
            <button onclick="decreaseQty()" class="btn-quantity" <%= product.isLocked || product.quantity === 0 ? 'disabled' : '' %>>
              <i class="fas fa-minus"></i>
            </button>
            <input 
              type="number" 
              id="quantity" 
              min="1" 
              max="<%= product.quantity %>" 
              value="1" 
              class="quantity-input" 
              <%= product.isLocked || product.quantity === 0 ? 'disabled' : '' %>
            >
            <button onclick="increaseQty()" class="btn-quantity" <%= product.isLocked || product.quantity === 0 ? 'disabled' : '' %>>
              <i class="fas fa-plus"></i>
            </button>
          </div>
        </div>
        
        <!-- Action Buttons -->
        <div class="action-buttons">
          <button id="addToCartBtn" data-product-id="<%= product._id %>" class="btn-cart" <%= product.isLocked || product.quantity === 0 ? 'disabled' : '' %>>Add to Cart</button>
        </div>
      </div>
    </div>
  </div>

  <!-- Tabs Section -->
  <div class="container mb-5">
    <ul class="nav nav-tabs justify-content-center" id="productTabs" role="tablist">
      <li class="nav-item" role="presentation">
        <button class="nav-link active" id="details-tab" data-bs-toggle="tab" data-bs-target="#details" type="button">Product Details</button>
      </li>
      <li class="nav-item" role="presentation">
        <button class="nav-link" id="ratings-tab" data-bs-toggle="tab" data-bs-target="#ratings" type="button">Rating & Reviews</button>
      </li>
      <li class="nav-item" role="presentation">
        <button class="nav-link" id="faqs-tab" data-bs-toggle="tab" data-bs-target="#faqs" type="button">FAQs</button>
      </li>
    </ul>
    <div class="tab-content py-3" id="productTabsContent">
      <!-- Product Details Tab -->
      <div class="tab-pane fade show active" id="details" role="tabpanel">
        <div class="row">
          <div class="col-md-12">
            <h4 class="mb-2">Specifications</h4>
            <table class="table">
              <tbody>
                <tr>
                  <td width="30%"><strong>Processor</strong></td>
                  <td><%= product.processor %></td>
                </tr>
                <tr>
                  <td><strong>Memory</strong></td>
                  <td><%= product.ram %></td>
                </tr>
                <tr>
                  <td><strong>Storage</strong></td>
                  <td><%= product.Storage %></td>
                </tr>
                <tr>
                  <td><strong>Display</strong></td>
                  <td><%= product.display %></td>
                </tr>
                <tr>
                  <td><strong>Graphics</strong></td>
                  <td><%= product.graphicsCard %></td>
                </tr>
                <tr>
                  <td><strong>Connectivity</strong></td>
                  <td>
                    <% if (product.additionalFeatures && typeof product.additionalFeatures === 'string' && product.additionalFeatures.trim() !== '') { %>
                        <%= product.additionalFeatures.split(', ').slice(0, 2).join(', ') || 'N/A' %>
                    <% } else { %>
                        N/A
                    <% } %>
                </td>
                </tr>
                <tr>
                  <td><strong>Battery</strong></td>
                  <td><%= product.Battery %></td>
                </tr>
                <tr>
                  <td><strong>Weight</strong></td>
                  <td><%= product.Weight %></td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
      
      <!-- Ratings Tab -->
      <div class="tab-pane fade" id="ratings" role="tabpanel">
        <div class="d-flex justify-content-between align-items-center mb-3">
          <h4 class="mb-0">All Reviews <span class="text-muted">(465)</span></h4>
          <div class="d-flex align-items-center">
            <div class="dropdown me-3">
              <button class="btn btn-sm border dropdown-toggle" type="button" data-bs-toggle="dropdown">
                Latest
              </button>
              <ul class="dropdown-menu">
                <li><a class="dropdown-item" href="#">Latest</a></li>
                <li><a class="dropdown-item" href="#">Highest Rated</a></li>
                <li><a class="dropdown-item" href="#">Lowest Rated</a></li>
              </ul>
            </div>
            <button class="btn btn-outline-dark btn-sm px-3 ms-2">Write a Review</button>
          </div>
        </div>
        
        <div class="row">
          <div class="col-md-6">
            <div class="review-card">
              <div class="rating mb-2">
                <i class="fas fa-star"></i>
                <i class="fas fa-star"></i>
                <i class="fas fa-star"></i>
                <i class="fas fa-star"></i>
                <i class="fas fa-star"></i>
              </div>
              <div class="d-flex align-items-center mb-2">
                <h6 class="mb-0">Michael T.</h6>
                <span class="verified-user ms-2">
                  <i class="fas fa-check-circle"></i>
                </span>
              </div>
              <p>"This laptop exceeded my expectations! The performance is top-notch. Being a software developer, I'm quite picky about hardware specs, and this definitely gets a thumbs up."</p>
              <small class="text-muted">Posted on August 14, 2024</small>
            </div>
          </div>
          
          <div class="col-md-6">
            <div class="review-card">
              <div class="rating mb-2">
                <i class="fas fa-star"></i>
                <i class="fas fa-star"></i>
                <i class="fas fa-star"></i>
                <i class="fas fa-star"></i>
                <i class="far fa-star"></i>
              </div>
              <div class="d-flex align-items-center mb-2">
                <h6 class="mb-0">Sarah L.</h6>
                <span class="verified-user ms-2">
                  <i class="fas fa-check-circle"></i>
                </span>
              </div>
              <p>"The processing power is amazing and the display quality is incredible. Battery life could be better, but it's expected with such high performance."</p>
              <small class="text-muted">Posted on August 15, 2024</small>
            </div>
          </div>
        </div>
        
        <div class="text-center mt-3">
          <a href="/reviews" class="btn btn-outline-dark px-4">Load More Reviews</a>
        </div>
      </div>
      
      <!-- FAQs Tab -->
      <div class="tab-pane fade" id="faqs" role="tabpanel">
        <div class="row justify-content-center">
          <div class="col-lg-8">
            <div class="accordion" id="faqAccordion">
              <div class="accordion-item">
                <h2 class="accordion-header">
                  <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#faq1">
                    What's the warranty period for this laptop?
                  </button>
                </h2>
                <div id="faq1" class="accordion-collapse collapse show" data-bs-parent="#faqAccordion">
                  <div class="accordion-body">
                    This laptop comes with a standard 1-year manufacturer warranty. You can extend it to 3 years with our Premium Care package available at checkout.
                  </div>
                </div>
              </div>
              <div class="accordion-item">
                <h2 class="accordion-header">
                  <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#faq2">
                    Is the RAM and storage upgradeable?
                  </button>
                </h2>
                <div id="faq2" class="accordion-collapse collapse" data-bs-parent="#faqAccordion">
                  <div class="accordion-body">
                    Yes, both the RAM and storage are user-upgradeable. The laptop has two SODIMM slots supporting up to 64GB of RAM, and two M.2 SSD slots for storage expansion.
                  </div>
                </div>
              </div>
              <div class="accordion-item">
                <h2 class="accordion-header">
                  <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#faq3">
                    Does it come with pre-installed software?
                  </button>
                </h2>
                <div id="faq3" class="accordion-collapse collapse" data-bs-parent="#faqAccordion">
                  <div class="accordion-body">
                    The laptop comes with Windows 11 Home pre-installed. It also includes a 30-day trial of Microsoft Office and our own system optimization software.
                  </div>
                </div>
              </div>
              <div class="accordion-item">
                <h2 class="accordion-header">
                  <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#faq4">
                    What's included in the box?
                  </button>
                </h2>
                <div id="faq4" class="accordion-collapse collapse" data-bs-parent="#faqAccordion">
                  <div class="accordion-body">
                    The package includes the laptop, a 180W power adapter, quick start guide, and warranty information.
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- You Might Also Like Section -->
  <div class="container mb-5">
    <h2 class="text-center fw-bold mb-3">YOU MIGHT ALSO LIKE</h2>
    <div class="row">
        <% applyoffsimilerProducts.forEach(item => { %>
            <div class="col-lg-3 col-md-6 mb-4">
                <a href="/productView?id=<%= item._id %>" class="text-decoration-none text-dark">
                    <div class="product-card">
                        <img src="<%= item.productImage[0] %>" class="img-fluid mb-2" alt="<%= item.productName %>">
                        <h5><%= item.productName %></h5>
                        <div class="rating mb-2">
                          
                                <i class="fas fa-star"></i>
                    
                            <i class="far fa-star"></i>
                            <span class="ms-1">4.0/5</span>
                        </div>
                        <div class="d-flex justify-content-center">
                            <h5 class="fw-bold me-2">₹<%= item.salePrice %></h5>
                            <% if (item.regularPrice && item.regularPrice > item.salePrice) { %>
                                <span class="old-price">₹<%= item.regularPrice %></span>
                                <% const discount = Math.round(((item.regularPrice - item.salePrice) / item.regularPrice) * 100); %>
                                <span class="discount ms-2">-%<%= discount %></span>
                            <% } %>
                        </div>
                    </div>
                </a>
            </div>
        <% }) %>
    </div>
</div>

  <!-- Newsletter Section -->
  <div class="container">
    <div class="newsletter-box">
      <div class="row justify-content-center">
        <div class="col-lg-8 text-center">
          <h3 class="fw-bold mb-2">STAY UP TO DATE ABOUT OUR LATEST OFFERS</h3>
          <div class="row g-2">
         
          </div>
        </div>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/magnific-popup.js/1.1.0/jquery.magnific-popup.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

  <script>
      document.addEventListener('DOMContentLoaded', function () {
                
                initAddToWishlistButton();

                    let resizeTimeout;
                    window.addEventListener('resize', () => {
                        clearTimeout(resizeTimeout);
                        resizeTimeout = setTimeout(checkMobileView, 100);
                    });
                });
    
document.addEventListener('DOMContentLoaded', () => {
  const thumbnails = document.querySelectorAll('.product-thumb');
  const mainImage = document.querySelector('.zoom-image');
  const imageLink = document.querySelector('.image-popup');

  if (!mainImage || !imageLink) {
    console.error('Main image or image link element not found');
    return;
  }

  // Thumbnail switching
  thumbnails.forEach(thumb => {
    thumb.addEventListener('click', () => {
      thumbnails.forEach(t => t.classList.remove('active'));
      thumb.classList.add('active');
      const newSrc = thumb.querySelector('img')?.src || '/images/placeholder.jpg';
      const newAlt = thumb.querySelector('img')?.alt || 'Product main image';
      mainImage.style.opacity = '0';
      setTimeout(() => {
        mainImage.src = newSrc;
        mainImage.alt = newAlt;
        imageLink.href = newSrc;
        mainImage.style.opacity = '1';
      }, 300);
    });
  });

  // Zoom functionality
  document.querySelectorAll('.zoom-container').forEach(container => {
    const img = container.querySelector('.zoom-image');
    const lens = container.querySelector('.zoom-lens');

    if (!img || !lens) {
      console.error('Zoom image or lens not found');
      return;
    }

    container.addEventListener('mousemove', (e) => {
      if (window.innerWidth <= 767) return; // Disable zoom on mobile

      const rect = container.getBoundingClientRect();
      const x = e.clientX - rect.left;
      const y = e.clientY - rect.top;

      let lensX = x - (lens.offsetWidth / 2);
      let lensY = y - (lens.offsetHeight / 2);

      const maxX = rect.width - lens.offsetWidth;
      const maxY = rect.height - lens.offsetHeight;
      lensX = Math.min(Math.max(0, lensX), maxX);
      lensY = Math.min(Math.max(0, lensY), maxY);

      lens.style.left = `${lensX}px`;
      lens.style.top = `${lensY}px`;

      const zoomRatio = 2;
      const backgroundX = (x * zoomRatio) - (lens.offsetWidth / 2);
      const backgroundY = (y * zoomRatio) - (lens.offsetHeight / 2);

      lens.style.backgroundImage = `url(${img.src})`;
      lens.style.backgroundSize = `${rect.width * zoomRatio}px ${rect.height * zoomRatio}px`;
      lens.style.backgroundPosition = `-${backgroundX}px -${backgroundY}px`;
    });

    container.addEventListener('mouseenter', () => {
      lens.style.opacity = '1';
    });

    container.addEventListener('mouseleave', () => {
      lens.style.opacity = '0';
    });
  });

  // Initialize Magnific Popup
  if (typeof $ !== 'undefined' && $.magnificPopup) {
    $('.image-popup').magnificPopup({
      type: 'image',
      closeOnContentClick: true,
      mainClass: 'mfp-img-mobile',
      image: {
        verticalFit: true
      }
    });
  }

  // Get product data from hidden inputs
  const getProductData = () => {
    const productId = document.getElementById("product-id")?.value;
    const maxQty = parseInt(document.getElementById("quantity")?.getAttribute('max')) || 0;
    const price = parseFloat(document.getElementById("price")?.value) || 0;
    
    return { productId, maxQty, price };
  };

  // Quantity control functions
  const increaseQty = () => {
    const qtyInput = document.getElementById("quantity");
    const { maxQty } = getProductData();
    let currentQty = parseInt(qtyInput.value) || 1;
    
    if (currentQty < maxQty) {
      qtyInput.value = currentQty + 1;
      console.log('Quantity increased to:', currentQty + 1);
    } else {
      showErrorMessage("Cannot add more than available stock.");
    }
  };

  const decreaseQty = () => {
    const qtyInput = document.getElementById("quantity");
    let currentQty = parseInt(qtyInput.value) || 1;
    
    if (currentQty > 1) {
      qtyInput.value = currentQty - 1;
      console.log('Quantity decreased to:', currentQty - 1);
    }
  };

  // Make functions globally available
  window.increaseQty = increaseQty;
  window.decreaseQty = decreaseQty;

  // Validate manual quantity input
  const quantityInput = document.getElementById("quantity");
  if (quantityInput) {
    quantityInput.addEventListener("input", function () {
      const { maxQty } = getProductData();
      let value = parseInt(this.value);
      
      if (isNaN(value) || value < 1) {
        this.value = 1;
      } else if (value > maxQty) {
        this.value = maxQty;
        showErrorMessage("Cannot add more than available stock.");
      }
    });

    // Prevent non-numeric input
    quantityInput.addEventListener("keypress", function(e) {
      if (!/[0-9]/.test(e.key) && !['Backspace', 'Delete', 'Tab', 'Enter'].includes(e.key)) {
        e.preventDefault();
      }
    });
  }

  // Error message helper - Updated to use SweetAlert
  const showErrorMessage = (message) => {
    if (typeof Swal !== 'undefined') {
      Swal.fire({
        title: "Error!",
        text: message,
        icon: "error",
        confirmButtonText: "OK"
      });
    } else {
      // Fallback to console error if SweetAlert is not available
      console.error('SweetAlert not available. Error message:', message);
    }
  };

  // Success message helper - Updated to use SweetAlert
  const showSuccessMessage = (title, callback) => {
    if (typeof Swal !== 'undefined') {
      Swal.fire({
        title: title,
        icon: "success",
        timer: 1500,
        showConfirmButton: false
      }).then(callback);
    } else {
      console.log('SweetAlert not available. Success message:', title);
      if (callback) callback();
    }
  };

  // Login prompt helper - Updated to use SweetAlert
  const showLoginPrompt = () => {
    if (typeof Swal !== 'undefined') {
      Swal.fire({
        title: "Please log in",
        text: "You need to be logged in to add items to the cart.",
        icon: "warning",
        confirmButtonText: "Go to Login",
        showCancelButton: true,
        cancelButtonText: "Cancel"
      }).then((result) => {
        if (result.isConfirmed) {
          window.location.href = "/login";
        }
      });
    } else {
      console.log('SweetAlert not available. Login prompt shown.');
      // Fallback behavior without redirect
      console.log("Please log in to add items to the cart.");
    }
  };

  // Add to cart functionality
  const addToCartBtn = document.getElementById("addToCartBtn");
  if (addToCartBtn) {
    addToCartBtn.addEventListener("click", async () => {
      try {
        // Get current product data
        const { productId, maxQty, price } = getProductData();
        const quantity = parseInt(document.getElementById("quantity").value) || 1;

        // Validation
        if (!productId) {
          showErrorMessage("Product ID not found.");
          return;
        }

        if (quantity < 1 || isNaN(quantity)) {
          showErrorMessage("Please enter a valid quantity.");
          return;
        }

        if (quantity > maxQty) {
          showErrorMessage("Cannot add more than available stock.");
          document.getElementById("quantity").value = maxQty;
          return;
        }

        // Disable button during request
        addToCartBtn.disabled = true;
        const originalText = addToCartBtn.textContent;
        addToCartBtn.textContent = "Adding...";

        console.log('Sending to cart:', { productId, quantity, price });

        // Send request to backend
        const response = await fetch("/cart/add", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            "Accept": "application/json"
          },
          body: JSON.stringify({ 
            productId: productId,
            quantity: quantity,
            price: price
          })
        });

        const data = await response.json();
        console.log('Backend response:', data);

        // Handle response
        if (data.success) {
          showSuccessMessage("Added to cart successfully!", () => {
            window.location.href = "/cart";
          });
        } else if (data.redirectToLogin) {
          showLoginPrompt();
        } else {
          showErrorMessage(data.message || "Failed to add to cart.");
        }

      } catch (error) {
        console.error("Add to cart error:", error);
        showErrorMessage("Something went wrong. Please try again.");
      } finally {
        // Re-enable button
        addToCartBtn.disabled = false;
        addToCartBtn.textContent = originalText || "Add to Cart";
      }
    });
  }

  // Debug function to check current state
  window.debugProductState = () => {
    const { productId, maxQty, price } = getProductData();
    const quantity = parseInt(document.getElementById("quantity").value) || 1;
    
    console.log('Current Product State:', {
      productId,
      quantity,
      maxQty,
      price,
      isValid: productId && quantity > 0 && quantity <= maxQty
    });
  };

  console.log('Product view JavaScript initialized successfully');
});
         // Updated Wishlist Function
    function initAddToWishlistButton() {
        const buttons = document.querySelectorAll('.wishlist-btn'); // Corrected variable name
        buttons.forEach(button => {
            button.addEventListener('click', async function (e) {
                e.preventDefault(); // Prevent default navigation
                e.stopPropagation();

                const productId = this.dataset.productId;
                const productName = this.dataset.productName; // Now defined in HTML

                // Disable button and show loading state
                const originalContent = this.innerHTML;
                this.disabled = true;
                this.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Adding...';

                try {
                    const res = await fetch('/wishlist/add', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ productId }),
                    });

                    const data = await res.json();

                    if (data.success) {
                        // Toggle active class to show the product is in the wishlist
                        this.classList.add('active');

                        // Success message with centered SweetAlert
                        await Swal.fire({
                            icon: 'success',
                            title: 'Added to Wishlist!',
                            position: 'center',
                            showConfirmButton: true,
                            confirmButtonText: 'OK',
                            timer: 3000,
                            timerProgressBar: true
                        });
                    } else {
                        // Error message with centered SweetAlert
                        await Swal.fire({
                            icon: 'error',
                            title: 'Failed to Add',
                            text: data.message || 'Something went wrong while adding to wishlist.',
                            position: 'center',
                            showConfirmButton: true,
                            confirmButtonText: 'OK',
                            timer: 4000,
                            timerProgressBar: true
                        });
                    }
                } catch (err) {
                    console.error('Add to wishlist error:', err);
                    // Network error message with centered SweetAlert
                    await Swal.fire({
                        icon: 'error',
                        title: 'Network Error',
                        text: 'Server error. Please try again later.',
                        position: 'center',
                        showConfirmButton: true,
                        confirmButtonText: 'OK',
                        timer: 4000,
                        timerProgressBar: true
                    });
                } finally {
                    // Re-enable button and restore original content
                    this.disabled = false;
                    this.innerHTML = originalContent;
                }
            });
        });
      }
  </script>
  <%- include("../../views/partials/user/footer") %>
</body>
</html>