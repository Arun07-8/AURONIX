<%- include("../../views/partials/admin/header") %>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Offers Management</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background-color: #f8f9fa;
            font-size: 14px;
        }

        /* Sidebar Styles */
        .sidebar {
            position: fixed;
            top: 0;
            left: 0;
            height: 100vh;
            width: 260px;
            background: linear-gradient(180deg, #2c3e50 0%, #34495e 100%);
            z-index: 1000;
            transition: all 0.3s ease;
            overflow-y: auto;
        }

        .sidebar-header {
            padding: 1.5rem 1rem;
            border-bottom: 1px solid rgba(255,255,255,0.1);
        }

        .sidebar-header h3 {
            color: white;
            font-size: 1.2rem;
            font-weight: 600;
            margin: 0;
        }

        .sidebar-nav {
            padding: 1rem 0;
        }

        .nav-item {
            margin-bottom: 0.5rem;
        }

        .nav-link {
            color: rgba(255,255,255,0.8);
            padding: 0.75rem 1.5rem;
            display: flex;
            align-items: center;
            text-decoration: none;
            transition: all 0.3s ease;
            border-left: 3px solid transparent;
        }

        .nav-link:hover,
        .nav-link.active {
            background-color: rgba(255,255,255,0.1);
            color: white;
            border-left-color: #667eea;
        }

        .nav-link i {
            width: 20px;
            margin-right: 0.75rem;
            text-align: center;
        }

        /* Main Content Area */
        .main-content {
            margin-left: 260px;
            min-height: 100vh;
            padding: 2rem;
            transition: margin-left 0.3s ease;
        }

        .container-fluid {
            max-width: 100%;
            padding: 0;
        }
        
        .page-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
            padding-bottom: 1rem;
            border-bottom: 1px solid #e9ecef;
        }
        
        .page-title {
            font-size: 1.75rem;
            font-weight: 600;
            color: #2c3e50;
            margin: 0;
        }
        
        .add-btn {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border: none;
            padding: 0.75rem 1.5rem;
            border-radius: 8px;
            color: white;
            font-weight: 500;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        .add-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);
            color: white;
        }
        
        .search-section {
            background: white;
            padding: 1.5rem;
            border-radius: 12px;
            border: 1px solid #e1e5e9;
            margin-bottom: 2rem;
            box-shadow: 0 4px 16px rgba(0,0,0,0.08), 0 2px 4px rgba(0,0,0,0.04);
        }
        
        .search-row {
            display: flex;
            gap: 1rem;
            align-items: end;
        }
        
        .search-input {
            flex: 1;
            position: relative;
        }

        .search-input label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 500;
            color: #495057;
            font-size: 0.9rem;
        }
        
        .search-input input {
            border: 1px solid #ced4da;
            border-radius: 8px;
            padding: 0.75rem 1rem;
            font-size: 0.9rem;
            width: 100%;
            transition: border-color 0.3s ease;
            background: white;
        }
        
        .search-input input:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.15);
            outline: none;
        }
        
        .search-input input::placeholder {
            color: #9ca3af;
        }
        
        .sort-dropdown {
            min-width: 200px;
        }

        .sort-dropdown label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 500;
            color: #495057;
            font-size: 0.9rem;
        }
        
        .sort-dropdown select {
            border: 1px solid #ced4da;
            border-radius: 8px;
            padding: 0.75rem 1rem;
            font-size: 0.9rem;
            background: white;
            width: 100%;
        }
        
        .sort-dropdown optgroup {
            font-weight: 600;
            color: #667eea;
            font-size: 0.85rem;
        }
        
        .sort-dropdown option {
            padding: 0.5rem;
            color: #333;
        }
        
        .search-btn {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border: none;
            padding: 0.75rem 1.5rem;
            border-radius: 8px;
            color: white;
            font-weight: 500;
            height: fit-content;
        }
        
        .clear-btn {
            background: #f8f9fa;
            border: 1px solid #ced4da;
            padding: 0.75rem 1.5rem;
            border-radius: 8px;
            color: #6c757d;
            font-weight: 500;
            height: fit-content;
        }
        
        .clear-btn:hover {
            background: #e9ecef;
            color: #495057;
        }
        
        .table-container {
            background: white;
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 4px 16px rgba(0,0,0,0.08), 0 2px 4px rgba(0,0,0,0.04);
            border: 1px solid #e1e5e9;
        }
        
        .table {
            margin: 0;
            font-size: 0.95rem;
        }
        
        .table thead {
            background-color: #343a40 !important;
        }
        
        .table thead th {
            background-color: #343a40 !important;
            color: white !important;
            font-weight: 600;
            border: none;
            padding: 1rem 0.75rem;
            font-size: 0.95rem;
            text-transform: none;
            letter-spacing: 0.02em;
            text-align: center;
            vertical-align: middle;
            border-left: none;
            border-right: none;
        }
        
        .table tbody td {
            padding: 1rem 0.75rem;
            border-bottom: 1px solid #f1f3f4;
            vertical-align: middle;
            font-size: 0.9rem;
            text-align: center;
            border-left: none;
            border-right: none;
        }
        
        .table tbody tr:hover {
            background-color: #f8f9fa;
        }
        
        .table tbody tr:last-child td {
            border-bottom: none;
        }
       .status-badge {
    padding: 0.4rem 1rem;
    border-radius: 20px;
    font-size: 0.75rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.02em;
    display: inline-block;
}

.status-expired {
    background-color: #fff3cd;
    color: #856404;
    border: 1px solid #ffeaa7;
}

.status-active {
    background-color: #d4edda;
    color: #155724;
    border: 1px solid #c3e6cb;
}

.status-inactive {
    background-color: #f8d7da;
    color: #721c24;
    border: 1px solid #f5c6cb;
}
        /* Improved Action Buttons */
        .actions-cell {
            white-space: nowrap;
            padding: 1rem 0.5rem !important;
        }
        
        .action-btn {
            padding: 0.65rem 1.2rem;
            border-radius: 7px;
            font-size: 0.85rem;
            font-weight: 600;
            border: none;
            margin: 0 0.3rem;
            transition: all 0.25s ease;
            text-decoration: none;
            display: inline-block;
            min-width: 80px;
            text-align: center;
            letter-spacing: 0.02em;
        }
        
        .edit-btn {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            box-shadow: 0 2px 4px rgba(102, 126, 234, 0.2);
        }
        
        .edit-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(102, 126, 234, 0.4);
            color: white;
        }
        
        .delete-btn {
            background: linear-gradient(135deg, #ff6b6b 0%, #ee5a52 100%);
            color: white;
            box-shadow: 0 2px 4px rgba(255, 107, 107, 0.2);
        }
        
        .delete-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(255, 107, 107, 0.4);
            color: white;
        }

        .list-toggle {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            justify-content: center;
        }

        .list-btn {
            padding: 0.4rem 0.8rem;
            border-radius: 6px;
            font-size: 0.75rem;
            font-weight: 500;
            border: none;
            transition: all 0.2s ease;
            text-transform: uppercase;
            letter-spacing: 0.02em;
        }

        .list-btn.listed {
            background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
            color: white;
        }

        .list-btn.unlisted {
            background: linear-gradient(135deg, #dc3545 0%, #c82333 100%);
            color: white;
        }

        .list-btn:hover {
            transform: translateY(-1px);
            box-shadow: 0 2px 8px rgba(0,0,0,0.2);
        }

        .list-btn:disabled {
            opacity: 0.6;
            cursor: not-allowed;
            transform: none;
        }
        
        .pagination-container {
            display: flex;
            justify-content: center;
            margin-top: 2rem;
        }
        
        .pagination {
            margin: 0;
        }
        
        .pagination .page-link {
            border: 1px solid #e1e5e9;
            color: #6c757d;
            padding: 0.5rem 0.75rem;
            font-size: 0.85rem;
        }
        
        .pagination .page-item.active .page-link {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border-color: #667eea;
        }
        
        .pagination .page-link:hover {
            background-color: #f8f9fa;
            border-color: #667eea;
            color: #667eea;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .sidebar {
                width: 100%;
                height: auto;
                position: relative;
                transform: translateX(-100%);
            }

            .sidebar.active {
                transform: translateX(0);
            }

            .main-content {
                margin-left: 0;
                padding: 1rem;
            }

            .search-row {
                flex-direction: column;
                gap: 1rem;
            }

            .search-input,
            .sort-dropdown {
                width: 100%;
            }

            .page-header {
                flex-direction: column;
                gap: 1rem;
                text-align: center;
            }

            .table-responsive {
                border-radius: 12px;
            }
            
            .table {
                font-size: 0.75rem;
            }
            
            .table thead th,
            .table tbody td {
                padding: 0.6rem 0.4rem;
            }

            .actions-cell {
                padding: 0.6rem 0.3rem !important;
            }

            .action-btn {
                padding: 0.5rem 0.8rem;
                font-size: 0.75rem;
                margin: 0 0.2rem;
                margin-bottom: 0.3rem;
                min-width: 65px;
            }
        }
    </style>
</head>
<body>
    <!-- Sidebar -->

    <!-- Main Content -->
    <div class="main-content">
        <div class="container-fluid">
            <!-- Page Header -->
            <div class="page-header">
                <h1 class="page-title">Offers Management</h1>
                <button class="btn add-btn" onclick="window.location.href='/admin/add-offers'">
                    <i class="fas fa-plus"></i>
                    Add New Offer
                </button>
            </div>
            
            <!-- Search Section -->
            <div class="search-section">
                <div class="search-row">
                    <div class="search-input">
                        <label for="searchInput">Search Offers</label>
                        <input type="text" id="searchInput" class="form-control" placeholder="Search offers by name...">
                    </div>
                    <div class="sort-dropdown">
                        <label for="sortSelect">Sort By</label>
                        <select id="sortSelect" class="form-select">
                            <option selected>Newest First</option>
                            <optgroup label="Date">
                                <option>Newest First</option>
                                <option>Oldest First</option>
                            </optgroup>
                            <optgroup label="Offer Name">
                                <option>A-Z</option>
                                <option>Z-A</option>
                            </optgroup>
                            <optgroup label="Category Name">
                                <option>A-Z</option>
                                <option>Z-A</option>
                            </optgroup>
                            <optgroup label="Product Name">
                                <option>A-Z</option>
                                <option>Z-A</option>
                            </optgroup>
                            <optgroup label="Discount">
                                <option>High to Low</option>
                                <option>Low to High</option>
                            </optgroup>
                        </select>
                    </div>
                    <button class="btn search-btn" onclick="searchOffers()">
                        <i class="fas fa-search me-1"></i>Search
                    </button>
                    <button class="btn clear-btn" onclick="clearSearch()">
                        <i class="fas fa-times me-1"></i>Clear
                    </button>
                </div>
            </div>
      
<div class="table-container">
  <div class="table-responsive">
    <table class="table">
      <thead>
        <tr>
          <th>Offer Name</th>
          <th>Offer Type</th>
          <th>Applicable</th>
          <th>Type</th>
          <th>Offer Amount</th>
          <th>Valid From</th>
          <th>Valid Until</th>
          <th>Status</th>
          <th>List/Unlist</th>
          <th>Actions</th>
        </tr>
      </thead>
  <tbody>
<% 
  const now = new Date();
  offers.forEach((offer) => { 
    const validUpto = new Date(offer.validUpto);
    const isExpired = validUpto < now;

    let statusText, statusClass;
    if (isExpired) {
      statusText = 'Expired';
      statusClass = 'status-expired';
    } else if (offer.isActive === true) {
      statusText = 'Active';
      statusClass = 'status-active';
    } else {
      statusText = 'Inactive';
      statusClass = 'status-inactive';
    }
%>
          <tr>
            <td><%= offer.offerName %></td>
            <td><%= offer.offerType.charAt(0).toUpperCase() + offer.offerType.slice(1) %></td>
            <td>
              <% if (offer.offerType === 'Sitewide') { %>
                Sitewide
              <% } else { %>
                <%= offer.applicableId?.productName || offer.applicableId?.name || 'N/A' %>
              <% } %>
            </td>
            <td><%= offer.discountType.charAt(0).toUpperCase() + offer.discountType.slice(1) %></td>
            <td><%= offer.discountType === 'percentage' ? `${offer.offerAmount}%` : `₹${offer.offerAmount}` %></td>
            <td><%= new Date(offer.validFrom).toLocaleDateString('en-GB') %></td>
            <td><%= new Date(offer.validUpto).toLocaleDateString('en-GB') %></td>
            <td>
              <span class="status-badge <%= statusClass %>"><%= statusText %></span>
            </td>
         <td class="text-center">
  <% if (isExpired) { %>
    <span class="text-danger">Expired</span>
  <% } else { %>
    <% if (offer.isActive) { %>
      <button class="list-btn unlisted"
              onclick="handleInActiveOffer('<%= offer._id %>')">
        Unlisted
      </button>
    <% } else { %>
      <button class="list-btn listed"
              onclick="handleActiveOffer('<%= offer._id %>')">
        Listed
      </button>
    <% } %>
  <% } %>
</td>

            <td class="actions-cell">
              <button class="action-btn edit-btn" onclick="editOffer('<%= offer._id %>')">
                <i class="fas fa-edit me-1"></i>Edit
              </button>
              <button class="action-btn delete-btn" onclick="deleteOffer('<%= offer._id %>')">
                <i class="fas fa-trash me-1"></i>Delete
              </button>
            </td>
          </tr>
        <% }) %>
      </tbody>
    </table>
  </div>
</div>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script>


        function editOffer(offerId) {
       window.location.href = `/admin/edit-offer/${offerId}`;
     }
   
     

        function deleteOffer(id) {
            if (confirm('Are you sure you want to delete this offer?')) {
                alert('Delete offer with ID: ' + id);
            }ully
        }

        function searchOffers() {
            const searchTerm = document.getElementById('searchInput').value;
            const sortBy = document.getElementById('sortSelect').value;
            console.log('Searching for:', searchTerm, 'Sort by:', sortBy);
            // Implement search functionality here
        }

        function clearSearch() {
            document.getElementById('searchInput').value = '';
            document.getElementById('sortSelect').selectedIndex = 0;
        }

        // Toggle listing functionality
        function toggleListing(button) {
            if (button.classList.contains('listed')) {
                button.classList.remove('listed');
                button.classList.add('unlisted');
                button.textContent = 'Unlisted';
            } else {
                button.classList.remove('unlisted');
                button.classList.add('listed');
                button.textContent = 'Listed';
            }
            
            const row = button.closest('tr');
            const offerName = row.cells[0].textContent;
            const isListed = button.classList.contains('listed');
            console.log(`${offerName} is now ${isListed ? 'listed' : 'unlisted'}`);
        }

async function handleActiveOffer(offerId){
          const result = await Swal.fire({
                title: 'Are you sure?',
                text: 'This will Active the offer, making it visible and add products.',
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: 'Yes, Active it!',
                cancelButtonText: 'Cancel'
            });
      if (result.isConfirmed) {
                try {
                    const response = await fetch(`/admin/active-offers/${offerId}`, {
                        method: 'PATCH',
                        headers: { 'Content-Type': 'application/json' }
                    });
                    const data = await response.json();
                    if (!response.ok) throw new Error(data.error || 'Failed to Active coupon');
                    Swal.fire({
                        icon: 'success',
                        title: 'Offer  is Active',
                        text: data.message || 'Offer  has been Active successfully',
                        timer: 1500,
                        showConfirmButton: false
                    }).then(() => window.location.href="/admin/offers")
                    } catch (error) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: error.message || 'An error occurred while active the offer'
                    });
                }
            }
        }

         async function handleInActiveOffer(offerId) {
            const result = await Swal.fire({
                title: 'Are you sure?',
                text: 'This will is inActive the offer , making it hidden. can not apply',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes, is inaActive it!',
                cancelButtonText: 'Cancel'
            });
            if (result.isConfirmed) {
                try {
                    const response = await fetch(`/admin/inactive-offers/${offerId}`, {
                        method: 'PATCH',
                        headers: { 'Content-Type': 'application/json' }
                    });
                    const data = await response.json();
                    if (!response.ok) throw new Error(data.error || 'Failed to inActive coupon');
                    Swal.fire({
                        icon: 'success',
                        title: 'Offer inActive',
                        text: data.message || 'Offer has been inActive successfully',
                        timer: 1500,
                        showConfirmButton: false
                    }).then(() => location.reload());
                } catch (error) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: error.message || 'An error occurred while inactive the offer'
                    });
                }
            }
        }
//    
  async function  deleteOffer(offerId) {
          const result = await Swal.fire({
                title: 'Are you sure?',
                text: 'This will mark the   Offer as deleted. You can restore it later.',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes, delete it!',
                cancelButtonText: 'Cancel'
            });
            if(result.isConfirmed)
            try{
                const response=await  fetch(`/admin/offerdelete/${offerId}`, {
                    method: 'PATCH',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                })
                   const data=await response.json()
                 if (!response.ok) throw new Error(data.error || ' Failed to soft delete  offer');
                     Swal.fire({
                        icon: 'success',
                        title: 'Deleted',
                        text: data.message || 'offer has been soft deleted',
                        timer: 1500,
                        showConfirmButton: false
                    }).then(() => window.location.href="/admin/offers");
                }catch(error) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops',
                        text: error.message || 'An error occurred while deleting the offer'
                    });
                }
            }
        
    </script>
</body>
</html>