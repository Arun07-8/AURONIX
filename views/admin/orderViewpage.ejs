
    <%- include("../../views/partials/admin/header") %>
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Order Details - Management System</title>
        <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
        <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
        <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
            <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">
        <style>
            :root {
                --primary-color: #2563eb;
                --primary-hover: #1d4ed8;
                --primary-light: #dbeafe;
                --secondary-color: #64748b;
                --success-color: #059669;
                --success-light: #d1fae5;
                --danger-color: #dc2626;
                --danger-light: #fee2e2;
                --warning-color: #d97706;
                --warning-light: #fef3c7;
                --gray-50: #f8fafc;
                --gray-100: #f1f5f9;
                --gray-200: #e2e8f0;
                --gray-300: #cbd5e1;
                --gray-400: #94a3b8;
                --gray-500: #64748b;
                --gray-600: #475569;
                --gray-700: #334155;
                --gray-800: #1e293b;
                --gray-900: #0f172a;
                --border-radius: 12px;
                --border-radius-sm: 8px;
                --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);
                --shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
                --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
                --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
            }

            * {
                box-sizing: border-box;
            }

            body {
                background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
                font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                line-height: 1.6;
                color: var(--gray-800);
                min-height: 100vh;
                margin: 0;
                padding: 0;
            }

            .main-container {
            max-width: 1715px;
            padding-left: 293px;
            padding-top: 18px;
            }

            .page-header {
                background: white;
                border: 1px solid var(--gray-200);
                border-radius: var(--border-radius);
                padding: 2rem;
                margin-bottom: 2rem;
                box-shadow: var(--shadow-sm);
                border-left: 4px solid var(--primary-color);
            }

            .page-title {
                font-size: 2rem;
                font-weight: 700;
                color: var(--gray-900);
                margin-bottom: 0.5rem;
                display: flex;
                align-items: center;
                gap: 1rem;
            }

            .page-title i {
                color: var(--primary-color);
                font-size: 1.8rem;
            }

            .page-subtitle {
                color: var(--gray-600);
                font-size: 1rem;
                margin: 0;
                font-weight: 400;
            }

            .card {
                background: white;
                border: 1px solid var(--gray-200);
                border-radius: var(--border-radius);
                box-shadow: var(--shadow-sm);
                margin-bottom: 2rem;
                overflow: hidden;
                transition: all 0.2s ease;
            }

            .card:hover {
                box-shadow: var(--shadow-md);
            }

            .card-header {
                background: var(--gray-50);
                border-bottom: 1px solid var(--gray-200);
                padding: 1.5rem 2rem;
                font-weight: 600;
                font-size: 1.1rem;
                color: var(--gray-800);
                display: flex;
                justify-content: between;
                align-items: center;
            }

            .card-header i {
                color: var(--primary-color);
                margin-right: 0.5rem;
            }

            .card-body {
                padding: 2rem;
            }

            .section-title {
                font-size: 1rem;
                font-weight: 600;
                color: var(--gray-700);
                margin-bottom: 1.5rem;
                padding-bottom: 0.5rem;
                border-bottom: 2px solid var(--gray-100);
                position: relative;
            }

            .section-title::before {
                content: '';
                position: absolute;
                bottom: -2px;
                left: 0;
                width: 3rem;
                height: 2px;
                background: var(--primary-color);
            }

            .info-grid {
                display: grid;
                grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
                gap: 2rem;
            }

            .info-section {
                background: var(--gray-50);
                border-radius: var(--border-radius-sm);
                padding: 1.5rem;
                border: 1px solid var(--gray-200);
            }

            .info-row {
                display: flex;
                align-items: flex-start;
                margin-bottom: 1rem;
                padding: 0.75rem 0;
                border-bottom: 1px solid var(--gray-200);
            }

            .info-row:last-child {
                margin-bottom: 0;
                border-bottom: none;
            }

            .info-label {
                font-weight: 600;
                color: var(--gray-700);
                min-width: 140px;
                margin: 0;
                font-size: 0.875rem;
            }

            .info-value {
                color: var(--gray-600);
                margin: 0;
                font-size: 0.95rem;
                flex: 1;
                font-weight: 500;
            }

            .status-controls {
                display: flex;
                align-items: center;
                gap: 1rem;
                background: white;
                padding: 0.75rem;
                border-radius: var(--border-radius-sm);
                border: 1px solid var(--gray-200);
            }

            .status-dropdown {
                min-width: 200px;
                border: 1px solid var(--gray-300);
                border-radius: var(--border-radius-sm);
                font-size: 0.875rem;
                padding: 0.75rem 1rem;
                background: white;
                color: var(--gray-800);
                font-weight: 500;
                transition: all 0.2s ease;
            }

            .status-dropdown:focus {
                border-color: var(--primary-color);
                box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
                outline: none;
            }

            .update-btn {
                background: var(--primary-color);
                border: none;
                border-radius: var(--border-radius-sm);
                padding: 0.75rem 1.5rem;
                font-weight: 600;
                font-size: 0.875rem;
                color: white;
                transition: all 0.2s ease;
                cursor: pointer;
            }

            .update-btn:hover {
                background: var(--primary-hover);
                transform: translateY(-1px);
                box-shadow: var(--shadow-md);
            }

            .table-container {
                background: white;
                border-radius: var(--border-radius);
                overflow-x: auto;
                box-shadow: var(--shadow-sm);
                border: 1px solid var(--gray-200);
            }

            .table {
                margin: 0;
                font-size: 0.9rem;
                width: 100%;
                min-width: 800px;
            }

            .table thead th {
                background: var(--gray-50);
                color: var(--gray-800);
                font-weight: 600;
                border-bottom: 2px solid var(--gray-200);
                padding: 1rem;
                font-size: 0.875rem;
                white-space: nowrap;
            }

            .table tbody td {
                padding: 1rem;
                vertical-align: middle;
                border-bottom: 1px solid var(--gray-200);
                color: var(--gray-700);
                font-weight: 500;
            }

            .table tbody tr:hover {
                background: var(--gray-50);
            }

            .product-icon {
                width: 50px;
                height: 50px;
                border-radius: var(--border-radius-sm);
                display: flex;
                align-items: center;
                justify-content: center;
                border: 2px solid var(--gray-200);
                overflow: hidden;
            }

            .product-img {
                width: 100%;
                height: 100%;
                object-fit: cover;
            }

            .product-name {
                font-weight: 600;
                color: var(--gray-800);
                margin: 0;
                font-size: 0.95rem;
            }

            .quantity-badge {
                background: var(--primary-light);
                color: var(--primary-color);
                padding: 0.25rem 0.75rem;
                border-radius: 20px;
                font-weight: 600;
                font-size: 0.8rem;
            }

            .price-text {
                font-weight: 700;
                color: var(--gray-800);
                font-size: 1rem;
            }

            .status-badge {
                padding: 0.5rem 1rem;
                border-radius: 20px;
                font-size: 0.75rem;
                font-weight: 600;
                text-transform: uppercase;
                letter-spacing: 0.05em;
                display: inline-flex;
                align-items: center;
                gap: 0.25rem;
            }

            .status-delivered {
                background: var(--success-light);
                color: var(--success-color);
            }

            .status-pending {
                background: var(--warning-light);
                color: var(--warning-color);
            }

            .status-processing {
                background: var(--primary-light);
                color: var(--primary-color);
            }

            .status-shipped {
                background: #e0e7ff;
                color: #3730a3;
            }

            .status-cancelled {
                background: var(--danger-light);
                color: var(--danger-color);
            }

            .total-row {
                background: var(--gray-50);
                font-weight: 700;
                font-size: 1rem;
                border-top: 3px solid var(--primary-color);
            }

            .total-row td {
                padding: 1.5rem 1rem;
            }

            .empty-state {
                text-align: center;
                padding: 3rem 2rem;
                color: var(--gray-500);
            }

            .empty-state i {
                font-size: 3rem;
                margin-bottom: 1rem;
                opacity: 0.5;
                color: var(--gray-400);
            }

            .empty-state p {
                font-size: 1.1rem;
                margin: 0;
                font-weight: 500;
            }

            .process-btn {
                background: var(--success-color);
                border: none;
                border-radius: var(--border-radius-sm);
                padding: 0.5rem 1rem;
                font-weight: 600;
                font-size: 0.8rem;
                color: white;
                transition: all 0.2s ease;
                cursor: pointer;
            }

            .process-btn:hover {
                background: #047857;
                transform: translateY(-1px);
                box-shadow: var(--shadow-md);
            }

            .alert-success {
                background: var(--success-light);
                border: 1px solid var(--success-color);
                color: var(--success-color);
                border-radius: var(--border-radius-sm);
                padding: 1rem;
                margin-bottom: 1rem;
            }

            /* Responsive Design */
            @media (max-width: 1200px) {
                .main-container {
                    max-width: 100%;
                    padding: 1rem;
                }
            }

            @media (max-width: 768px) {
                .main-container {
                    padding: 0.75rem;
                }

                .page-header {
                    padding: 1.5rem;
                    margin-bottom: 1.5rem;
                }

                .page-title {
                    font-size: 1.75rem;
                    flex-direction: column;
                    align-items: flex-start;
                    gap: 0.5rem;
                }

                .card-body {
                    padding: 1.5rem;
                }

                .info-grid {
                    grid-template-columns: 1fr;
                    gap: 1rem;
                }

                .info-row {
                    flex-direction: column;
                    align-items: flex-start;
                }

                .info-label {
                    min-width: auto;
                    margin-bottom: 0.25rem;
                }

                .status-controls {
                    flex-direction: column;
                    align-items: stretch;
                    gap: 0.75rem;
                }

                .status-dropdown,
                .update-btn {
                    width: 100%;
                }

                .table {
                    font-size: 0.8rem;
                }

                .product-icon {
                    width: 40px;
                    height: 40px;
                }
            }

            /* Loading States */
            .loading {
                opacity: 0.7;
                pointer-events: none;
                position: relative;
            }

            .loading::after {
                content: '';
                position: absolute;
                top: 50%;
                left: 50%;
                width: 16px;
                height: 16px;
                margin: -8px 0 0 -8px;
                border: 2px solid transparent;
                border-top: 2px solid white;
                border-radius: 50%;
                animation: spin 1s linear infinite;
            }

            @keyframes spin {
                0% { transform: rotate(0deg); }
                100% { transform: rotate(360deg); }
            }

            /* Notification Styles */
            .notification {
                position: fixed;
                top: 20px;
                right: 20px;
                z-index: 9999;
                min-width: 300px;
                padding: 1rem;
                border-radius: var(--border-radius);
                box-shadow: var(--shadow-lg);
                animation: slideIn 0.3s ease;
            }

            @keyframes slideIn {
                from { transform: translateX(100%); opacity: 0; }
                to { transform: translateX(0); opacity: 1; }
            }

            @keyframes slideOut {
                from { transform: translateX(0); opacity: 1; }
                to { transform: translateX(100%); opacity: 0; }
            }

            /* Print Styles */
            @media print {
                body { 
                    background: white !important; 
                    font-size: 12px;
                }
                .card { 
                    box-shadow: none !important; 
                    border: 1px solid #000 !important; 
                    page-break-inside: avoid;
                }
                .btn, .status-controls { 
                    display: none !important; 
                }
                .page-header { 
                    margin-bottom: 1rem !important; 
                    border: none !important;
                }
                .main-container {
                    max-width: 100% !important;
                    padding: 0 !important;
                }
            }
        </style>
    </head>
    <body>
        <div class="main-container">
            <!-- Page Header -->
            <div class="page-header">
                <h1 class="page-title">
                    <i class="fas fa-receipt"></i>
                    Order Management
                </h1>
                <p class="page-subtitle">View and manage order details, items, and returns with comprehensive tracking</p>
            </div>

            <!-- Order Details Section -->
            <div class="card">
                <div class="card-header">
                    <div class="d-flex justify-content-between align-items-center w-100">
                        <span>
                            <i class="fas fa-info-circle"></i>
                            Order Details
                        </span>
                        <div class="status-controls">
                            <select class="form-select status-dropdown" id="orderStatus_<%= order._id %>">
                                <option value="Pending" <%= order.status === 'Pending' ? 'selected' : '' %>>Pending</option>
                                <option value="Processing" <%= order.status === 'Processing' ? 'selected' : '' %>>Processing</option>
                                <option value="Shipped" <%= order.status === 'Shipped' ? 'selected' : '' %>>Shipped</option>
                                <option value="Delivered" <%= order.status === 'Delivered' ? 'selected' : '' %>>Delivered</option>
                                <option value="Cancelled" <%= order.status === 'Cancelled' ? 'selected' : '' %>>Cancelled</option>
                            </select>
                            <button class="btn update-btn" data-order-id="<%= order._id %>" onclick="updateOrderStatus('<%= order._id %>', this)">
                                <i class="fas fa-sync-alt me-1"></i> Update Status
                            </button>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="info-grid">
                        <div class="info-section">
                            <h6 class="section-title">Order Information</h6>
                            <div class="info-row">
                                <p class="info-label">Order ID</p>
                                <p class="info-value"><%= order.orderId %></p>
                            </div>
                            <div class="info-row">
                                <p class="info-label">Customer Name</p>
                                <p class="info-value"><%= order.userId.name || 'N/A' %></p>
                            </div>
                            <div class="info-row">
                                <p class="info-label">Order Date</p>
                                <p class="info-value"><%= order.invoiceDate ? new Date(order.invoiceDate).toLocaleDateString() : new Date(order.createdAt).toLocaleDateString() %></p>
                            </div>
                        </div>
                        <div class="info-section">
                            <h6 class="section-title">Shipping Information</h6>
                            <div class="info-row">
                                <p class="info-label">Address</p>
                                <p class="info-value"><%= order.shippingAddress.fullAddress %></p>
                            </div>
                            <div class="info-row">
                                <p class="info-label">Phone</p>
                                <p class="info-value"><%= order.shippingAddress.phone %></p>
                            </div>
                            <div class="info-row">
                                <p class="info-label">Alt Phone</p>
                                <p class="info-value"><%= order.shippingAddress.altPhone || 'N/A' %></p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Order Items Section -->
            <div class="card">
                <div class="card-header">
                    <i class="fas fa-shopping-cart"></i>
                    Order Items
                </div>
                <div class="card-body p-0">
                    <div class="table-container">
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>Product</th>
                                        <th>Product Name</th>
                                        <th>Quantity</th>
                                        <th>Unit Price</th>
                                        <th>Total Price</th>
                                        <th>Status</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% order.orderedItems.forEach(item => { %>
                                        <tr>
                                            <td>
                                                <div class="product-icon">
                                                <img src="<%= item.product.productImage && item.product.productImage[0] ? item.product.productImage[0] : '/images/placeholder.png' %>" alt="<%= item.product.productName %>" class="product-img">
                                                </div>
                                            </td>
                                            <td>
                                                <p class="product-name"><%= item.product.productName %></p>
                                            </td>
                                            <td>
                                                <span class="quantity-badge"><%= item.quantity %></span>
                                            </td>
                                            <td>
                                                <span class="price-text">₹<%= item.price.toFixed(2) %></span>
                                            </td>
                                            <td>
                                                <span class="price-text">₹<%= (item.quantity * item.price).toFixed(2) %></span>
                                            </td>
                                            <td>
                                                <span class="status-badge status-<%= item.status.toLowerCase() %>">
                                                    <i class="fas fa-circle" style="font-size: 0.5rem;"></i>
                                                    <%= item.status %>
                                                </span>
                                            </td>
                                        </tr>
                                    <% }) %>
                                    <tr class="total-row">
                                        <td colspan="4" class="text-end">
                                            <strong>
                                                <i class="fas fa-calculator me-2"></i>
                                                Grand Total
                                            </strong>
                                        </td>
                                        <td colspan="2">
                                            <strong class="price-text">₹<%= order.finalAmount.toFixed(2) %></strong>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Return Items Section -->
            <div class="card">
                <div class="card-header">
                    <i class="fas fa-undo"></i>
                    Return Items
                </div>
                <div class="card-body p-0">
                    <div class="table-container">
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>Product</th>
                                        <th>Product Name</th>
                                        <th>Quantity</th>
                                        <th>Price</th>
                                        <th>Reason</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% const returnItems = order.orderedItems.filter(item => item.isReturned); %>
                                    <% if (returnItems.length > 0) { %>
                                        <% returnItems.forEach(returnItem => { %>
                                            <tr>
                                                <td>
                                                    <div class="product-icon">
                                                        <img src="<%= returnItem.product.productImage && returnItem.product.productImage[0] ? returnItem.product.productImage[0] : '/images/placeholder.png' %>" alt="<%= returnItem.product.productName %>" class="product-img">
                                                    </div>
                                                </td>
                                                <td>
                                                    <p class="product-name"><%= returnItem.product.productName %></p>
                                                </td>
                                                <td>
                                                    <span class="quantity-badge"><%= returnItem.quantity %></span>
                                                </td>
                                                <td>
                                                    <span class="price-text">₹<%= returnItem.price.toFixed(2) %></span>
                                                </td>
                                                <td><%= returnItem.returnReason || 'N/A' %></td>
                                               <td>
                    <button class="btn process-btn" onclick=" confirmAcceptReturn('<%= order._id %>', '<%= returnItem.product._id %>')">
                        <i class="fas fa-check me-1"></i>
                        Accept
                    </button>
                    <button class="btn btn-danger" onclick="showRejectModal('<%= order._id %>', '<%= returnItem.product._id %>', 'reject')">
                        <i class="fas fa-times me-1"></i>
                        Reject
                    </button>
                </td>
                                            </tr>
                                        <% }) %>
                                    <% } else { %>
                                        <tr>
                                            <td colspan="6" class="empty-state">
                                                <i class="fas fa-box-open"></i>
                                                <p>No return items found for this order</p>
                                            </td>
                                        </tr>
                                    <% } %>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
<!-- Rejection Reason Modal -->
<div class="modal fade" id="rejectReasonModal" tabindex="-1" aria-labelledby="rejectReasonModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="rejectReasonModalLabel">Enter Rejection Reason</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label for="rejectReason" class="form-label">Reason for Rejection</label>
                    <textarea class="form-control" id="rejectReason" rows="6" placeholder="Enter the reason for rejecting the return" required></textarea>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="submitRejectReason">Submit Rejection</button>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

        <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
        <script>
            // Update order status with enhanced UX
            async function updateOrderStatus(orderId, button) {
                const select = document.querySelector(`#orderStatus_${orderId}`);
                const selectedStatus = select.value;
                const originalContent = button.innerHTML;

                // Add loading state
                button.classList.add('loading');
                button.innerHTML = '<i class="fas fa-spinner fa-spin me-1"></i> Updating...';
                button.disabled = true;

                try {
                    const response = await fetch(`/admin/orders-status/${orderId}`, {
                        method: 'PATCH',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ newStatus: selectedStatus }),
                    });

                    const data = await response.json();

                    if (response.ok) {
                        // Success state
                        button.innerHTML = '<i class="fas fa-check me-1"></i> Updated!';
                        button.style.background = 'var(--success-color)';
                        
                        // Update dropdown
                        select.value = selectedStatus;
                        
                        // Show success notification
                        showNotification(data.message, 'success');

                        setTimeout(() => {
                            button.innerHTML = originalContent;
                            button.style.background = '';
                            button.classList.remove('loading');
                            button.disabled = false;
                        }, 2000);
                    } else {
                        throw new Error(data.message || 'Failed to update status');
                    }
                } catch (error) {
                    console.error('Error updating status:', error);
                    showNotification(error.message, 'error');
                    
                    // Reset button
                    button.innerHTML = originalContent;
                    button.classList.remove('loading');
                    button.disabled = false;
                }
            }
async function confirmAcceptReturn(orderId, productId) {
  const result = await Swal.fire({
    title: 'Accept Return?',
    text: "Are you sure you want to accept the return request?",
    icon: 'question',
    showCancelButton: true,
    confirmButtonText: 'Yes, accept it!',
    cancelButtonText: 'Cancel',
    confirmButtonColor: '#10b981',
  });

  if (result.isConfirmed) {
    try {
      const response = await fetch(`/admin/orders/${orderId}/accept/${productId}`, {
        method: 'PATCH',
      });

      const contentType = response.headers.get("content-type");

      if (!response.ok) {
        throw new Error(`Server error ${response.status}`);
      }

      if (contentType && contentType.includes("application/json")) {
        const data = await response.json();
        await Swal.fire('Accepted!', data.message || 'Return accepted.', 'success');
        setTimeout(() => location.reload(), 1000);
      } else {
        throw new Error('Unexpected server response (not JSON)');
      }

    } catch (error) {
      console.error('Accept Return Error:', error);
      await Swal.fire('Error!', error.message || 'Something went wrong.', 'error');
    }
  }
}




            // Enhanced notification system
            function showNotification(message, type = 'info') {
                const notification = document.createElement('div');
                notification.className = `alert alert-${type === 'error' ? 'danger' : type} notification`;
                
                const icon = type === 'success' ? 'fas fa-check-circle' : 
                            type === 'error' ? 'fas fa-exclamation-circle' : 
                            'fas fa-info-circle';
                
                notification.innerHTML = `
                    <div class="d-flex align-items-center">
                        <i class="${icon} me-2"></i>
                        <span>${message}</span>
                        <button type="button" class="btn-close ms-auto" onclick="this.parentElement.parentElement.remove()"></button>
                    </div>
                `;
                
                document.body.appendChild(notification);
                
                setTimeout(() => {
                    if (notification.parentElement) {
                        notification.style.animation = 'slideOut 0.3s ease';
                        setTimeout(() => notification.remove(), 300);
                    }
                }, 5000);
            }


    async function showRejectModal(orderId, productId) {
  const { value: reason } = await Swal.fire({
    title: 'Reject Return?',
    input: 'textarea',
    inputLabel: 'Reason for rejection',
    inputPlaceholder: 'Type your reason here...',
    inputAttributes: {
      'aria-label': 'Type your reason here'
    },
    showCancelButton: true,
    confirmButtonText: 'Reject',
    confirmButtonColor: '#ef4444',
  });

  if (reason) {
    rejectReturn(orderId, productId, reason);
  }
}


            // Keyboard shortcuts
            document.addEventListener('keydown', function(e) {
                // Alt + U for update status
                if (e.altKey && e.key === 'u') {
                    e.preventDefault();
                    document.querySelector('.update-btn').click();
                }
                
                // Alt + R for refresh page
                if (e.altKey && e.key === 'r') {
                    e.preventDefault();
                    window.location.reload();
                }
            });

            // Auto-save status changes
            let statusTimeout;
            document.querySelector('#orderStatus').addEventListener('change', function() {
                clearTimeout(statusTimeout);
                statusTimeout = setTimeout(() => {
                    if (confirm('Auto-save status change?')) {
                        updateOrderStatus('<%= order._id %>');
                    }
                }, 1000);
            });

            // Print functionality
            function printOrder() {
                window.print();
            }

            // Add print styles
            const printStyle = document.createElement('style');
            printStyle.textContent = `
                @media print {
                    body { background: white !important; }
                    .card { box-shadow: none !important; border: 1px solid #000 !important; }
                    .btn, .status-controls { display: none !important; }
                    .page-header { margin-bottom: 1rem !important; }
                }
            `;
            document.head.appendChild(printStyle);

            // Open Reject Modal and store order/product IDs
function openRejectModal(orderId, productId) {
    const modal = new bootstrap.Modal(document.getElementById('rejectReasonModal'));
    const submitBtn = document.getElementById('submitRejectReason');
    const rejectReasonInput = document.getElementById('rejectReason');

    // Clear previous input
    rejectReasonInput.value = '';

    // Store IDs in button data attributes
    submitBtn.dataset.orderId = orderId;
    submitBtn.dataset.productId = productId;

    // Handle submit button click

    modal.show();
}
async function rejectReturn(orderId, productId, rejectReasonInput) {
  try {
    const res = await fetch(`/admin/orders/${orderId}/reject/${productId}`, {
      method: 'PATCH',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ reason:rejectReasonInput }),
    });

    const data = await res.json();
    if (res.ok) {
      Swal.fire('Rejected!', data.message || 'Return rejected.', 'success');
      setTimeout(() => location.reload(), 1000);
    } else {
      throw new Error(data.message || 'Failed to reject return.');
    }
  } catch (err) {
    console.error('Reject Return Error:', err);
    Swal.fire('Error!', err.message, 'error');
  }
}


        </script>
        <%- include("../../views/partials/admin/footer") %>
    </body>
    </html>