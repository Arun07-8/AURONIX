<%- include("../../views/partials/admin/header") %>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Orders Management</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
              * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background-color: #f8fafc;
            color: #334155;
            line-height: 1.6;
        }

        /* Main Content Styles */
        .main-content {
            margin-left: 250px;
            min-height: 100vh;
            padding: 0;
        }

        .container {
            max-width: 1600px;
            margin: 0 auto;
            padding: 24px;
            width: 100%;
        }

        .header {
            margin-bottom: 32px;
            background: white;
            padding: 24px 28px;
            border-radius: 12px;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            border: 1px solid #e2e8f0;
        }

        .page-title {
            font-size: 32px;
            font-weight: 700;
            color: #1e293b;
            margin-bottom: 16px;
        }

        .header-info {
            display: flex;
            gap: 24px;
            align-items: center;
            flex-wrap: wrap;
            padding-top: 16px;
            border-top: 1px solid #e2e8f0;
        }

        .info-item {
            display: flex;
            flex-direction: column;
            gap: 4px;
        }

        .info-label {
            font-size: 12px;
            font-weight: 600;
            color: #64748b;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .info-value {
            font-size: 16px;
            font-weight: 600;
            color: #1e293b;
        }

        .dropdown {
            padding: 14px 18px;
            border: 2px solid #e2e8f0;
            border-radius: 10px;
            background: white;
            font-size: 16px;
            font-weight: 500;
            cursor: pointer;
            min-width: 180px;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            transition: all 0.3s ease;
            appearance: none;
            background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6,9 12,15 18,9'%3e%3c/polyline%3e%3c/svg%3e");
            background-repeat: no-repeat;
            background-position: right 12px center;
            background-size: 16px;
            padding-right: 40px;
        }

        .dropdown:hover {
            border-color: #6366f1;
            box-shadow: 0 6px 12px -2px rgba(99, 102, 241, 0.25), 0 4px 6px -1px rgba(0, 0, 0, 0.1);
            transform: translateY(-1px);
        }

        .dropdown:focus {
            outline: none;
            border-color: #6366f1;
            box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1), 0 6px 12px -2px rgba(99, 102, 241, 0.25);
        }

        .search-section {
            background: white;
            padding: 28px;
            border-radius: 12px;
            box-shadow: 0 8px 25px -5px rgba(0, 0, 0, 0.15), 0 8px 10px -6px rgba(0, 0, 0, 0.1);
            margin-bottom: 24px;
            border: 1px solid #e2e8f0;
        }

        .search-row {
            display: flex;
            gap: 18px;
            align-items: center;
            flex-wrap: wrap;
        }

        .search-input {
            flex: 1;
            min-width: 350px;
            padding: 14px 18px;
            border: 1px solid #e2e8f0;
            border-radius: 8px;
            font-size: 16px;
            background: #f8fafc;
        }

        .search-input:focus {
            outline: none;
            border-color: #6366f1;
            box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);
        }

        .date-input {
            padding: 14px 18px;
            border: 1px solid #e2e8f0;
            border-radius: 8px;
            font-size: 16px;
            min-width: 170px;
        }

        .search-btn {
            background: #6366f1;
            color: white;
            border: none;
            padding: 14px 36px;
            border-radius: 8px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: background-color 0.2s;
        }

        .search-btn:hover {
            background: #5046e5;
        }

        .clear-btn {
            background: #64748b;
            color: white;
            border: none;
            padding: 14px 28px;
            border-radius: 8px;
            font-size: 16px;
            cursor: pointer;
            transition: background-color 0.2s;
        }

        .clear-btn:hover {
            background: #475569;
        }

        .table-container {
            background: white;
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
            border: 1px solid #e2e8f0;
        }

        .orders-table {
            width: 100%;
            border-collapse: collapse;
            table-layout: fixed;
        }

        .table-header {
            background: #1e293b;
            color: white;
        }

        .table-header th {
            padding: 20px 24px;
            text-align: left;
            font-weight: 600;
            font-size: 16px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            border-bottom: 1px solid #334155;
        }

        .table-header th:nth-child(1) { width: 7%; }
        .table-header th:nth-child(2) { width: 18%; }
        .table-header th:nth-child(3) { width: 13%; }
        .table-header th:nth-child(4) { width: 11%; }
        .table-header th:nth-child(5) { width: 11%; }
        .table-header th:nth-child(6) { width: 13%; }
        .table-header th:nth-child(7) { width: 11%; }
        .table-header th:nth-child(8) { width: 10%; }

        .table-row {
            border-bottom: 1px solid #e2e8f0;
            transition: background-color 0.2s;
        }

        .table-row:hover {
            background-color: #f8fafc;
        }

        .table-row:last-child {
            border-bottom: none;
        }

        .table-cell {
            padding: 24px 24px;
            vertical-align: middle;
            font-size: 16px;
            word-wrap: break-word;
        }

        .product-image {
            width: 50px;
            height: 50px;
            background: #e2e8f0;
            border-radius: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #64748b;
            font-size: 24px;
            margin: 0 auto;
        }

        .order-id {
            font-family: 'Courier New', monospace;
            font-weight: 600;
            color: #1e293b;
            font-size: 14px;
            word-break: break-all;
        }

        .customer-name {
            font-weight: 600;
            color: #1e293b;
            font-size: 16px;
        }

        .amount {
            font-weight: 600;
            color: #059669;
            font-size: 16px;
        }

        .payment-method {
            padding: 6px 12px;
            border-radius: 15px;
            font-size: 13px;
            font-weight: 600;
            text-transform: uppercase;
            display: inline-block;
            text-align: center;
            min-width: 70px;
        }

        .payment-method.card {
            background: #dbeafe;
            color: #1d4ed8;
        }

        .payment-method.upi {
            background: #f3e8ff;
            color: #7c3aed;
        }

        .payment-method.cod {
            background: #fef3c7;
            color: #d97706;
        }

        .status {
            padding: 8px 16px;
            border-radius: 20px;
            font-size: 14px;
            font-weight: 600;
            text-transform: uppercase;
            display: inline-block;
            text-align: center;
            min-width: 80px;
        }

        .status.delivered {
            background: #dcfce7;
            color: #166534;
        }

        .status.cancelled {
            background: #fee2e2;
            color: #dc2626;
        }

        .status.pending {
            background: #fef3c7;
            color: #d97706;
        }

        .view-btn {
            background: #6366f1;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 6px;
            font-size: 14px;
            font-weight: 600;
            cursor: pointer;
            transition: background-color 0.2s;
            width: 100%;
            max-width: 80px;
        }

        .view-btn:hover {
            background: #5046e5;
        }

        .pagination {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 10px;
            margin-top: 32px;
            padding: 24px;
        }

        .page-btn {
            width: 44px;
            height: 44px;
            border: 1px solid #e2e8f0;
            background: white;
            border-radius: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            font-size: 16px;
            font-weight: 500;
            transition: all 0.2s;
        }

        .page-btn:hover {
            border-color: #6366f1;
            color: #6366f1;
        }

        .page-btn.active {
            background: #6366f1;
            color: white;
            border-color: #6366f1;
        }

        /* Mobile Menu Toggle */
        .mobile-menu-toggle {
            display: none;
            position: fixed;
            top: 20px;
            left: 20px;
            z-index: 1001;
            background: #1e293b;
            color: white;
            border: none;
            padding: 12px;
            border-radius: 8px;
            cursor: pointer;
        }

        /* Responsive Design */
        @media (max-width: 1200px) {
            .sidebar {
                width: 220px;
            }
            
            .main-content {
                margin-left: 220px;
            }
            
            .container {
                max-width: 100%;
                padding: 20px;
            }
            
            .orders-table {
                table-layout: auto;
            }
        }

        @media (max-width: 768px) {
            .mobile-menu-toggle {
                display: block;
            }
            
            .sidebar {
                transform: translateX(-100%);
                transition: transform 0.3s ease;
            }
            
            .sidebar.open {
                transform: translateX(0);
            }
            
            .main-content {
                margin-left: 0;
                padding-top: 70px;
            }
            
            .search-row {
                flex-direction: column;
                align-items: stretch;
            }
            
            .search-input {
                min-width: auto;
            }
            
            .table-container {
                overflow-x: auto;
            }
            
            .orders-table {
                min-width: 900px;
            }
            
            .table-header th,
            .table-cell {
                padding: 16px 20px;
                font-size: 14px;
            }
            
            .page-title {
                font-size: 28px;
            }
        }

        .product-list {
            margin-bottom: 8px;
        }
        .status-display {
            display: block;
            margin-top: 8px;
        }
        .status {
            display: inline-block;
            padding: 6px 12px;
            border-radius: 20px;
            font-size: 14px;
            font-weight: 600;
            text-transform: uppercase;
            min-width: 100px;
            text-align: center;
        }
    </style>
</head>
<body>
    <!-- Mobile Menu Toggle -->
    <button class="mobile-menu-toggle" onclick="toggleSidebar()">☰</button>

    <!-- Main Content -->
    <div class="main-content">
        <div class="container">
            <!-- Header -->
            <div class="header">
                <h1 class="page-title">Orders Management</h1>
            </div>

            <!-- Search Section -->
            <div class="search-section">
                <div class="search-row">
                    <!-- Search Input -->
                    <input type="text" id="searchInput" class="search-input" placeholder="Search by order ID, customer name, or address...">

                    <!-- From Date Input -->
                    <div class="date-wrapper">
                        <i class="fa fa-calendar icon-left"></i>
                        <input type="text" id="fromDate" class="date-input" placeholder="From (dd/mm/yyyy)">
                    </div>

                    <!-- To Date Input -->
                    <div class="date-wrapper">
                        <i class="fa fa-calendar icon-left"></i>
                        <input type="text" id="toDate" class="date-input" placeholder="To (dd/mm/yyyy)">
                    </div>

                    <!-- Status Dropdown -->
                    <select id="statusFilter" class="dropdown">
                        <option value="All Orders">All Orders</option>
                        <option value="Pending">Pending</option>
                        <option value="Delivered">Delivered</option>
                        <option value="Cancelled">Cancelled</option>
                        <option value="Processing">Processing</option>
                        <option value="Return Request">Return Request</option>
                        <option value="Returned">Returned</option>
                    </select>

                    <!-- Payment Method Dropdown -->
                    <select id="paymentMethodFilter" class="dropdown">
                        <option value="All">All Payment Methods</option>
                        <option value="Cash on Delivery">Cash on Delivery</option>
                        <option value="Razorpay">Razorpay</option> 
                        <option value="Wallet">Wallet</option>
                    </select>

                    <!-- Clear Button -->
                    <button id="clearBtn" class="clear-btn">Clear</button>
                </div>
            </div>

            <!-- Orders Table -->
            <div class="table-container">
                <table class="orders-table">
                    <thead class="table-header">
                        <tr>
                            <th>Image</th>
                            <th>Order ID</th>
                            <th>Customer Name</th>
                            <th>Order Date</th>
                            <th>Total Amount</th>
                            <th>Payment Method</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% orders.forEach((order) => { %>
                            <tr class="table-row">
                                <td class="table-cell">
                                    <div class="product-image">
                                        <% if (order.orderedItems && order.orderedItems.length > 0 && order.orderedItems[0].product && order.orderedItems[0].product.images && order.orderedItems[0].product.images.length > 0) { %>
                                            <img src="/<%= order.orderedItems[0].product.images[0] %>" alt="Product Image" style="width: 50px; height: 50px; object-fit: cover; border-radius: 8px;">
                                        <% } else { %>
                                            📦
                                        <% } %>
                                    </div>
                                </td>
                                <td class="table-cell">
                                    <span class="order-id"><%= order.orderId %></span>
                                </td>
                                <td class="table-cell">
                                    <span class="customer-name"><%= order.shippingAddress.name %></span>
                                </td>
                                <td class="table-cell"><%= order.createdAt.toDateString() %></td>
                                <td class="table-cell">
                                    <span class="amount">₹<%= order.totalPrice %></span>
                                </td>
                                <td class="table-cell">
                                    <span class="payment-method <%= order.paymentMethod.toLowerCase() %>"><%= order.paymentMethod %></span>
                                </td>
                               <td class="table-cell">
  <% order.orderedItems.forEach((item, idx) => { %>
    <div class="mb-1">
      <span class="d-block fw-bold"><%= item.product.name %></span> 
    </div>
  <% }) %>

  <span class="status badge 
    <% if(order.mainStatus === 'Pending'){ %> bg-warning
    <% } else if(order.mainStatus === 'Delivered'){ %> bg-success
    <% } else if(order.mainStatus === 'Cancelled'){ %> bg-danger
    <% } else { %> bg-info <% } %>">
    <%= order.mainStatus %>
  </span>
</td>
                                <td class="table-cell">
                                    <button class="view-btn" onclick="viewOrderDetails('<%= order._id %>')">VIEW</button>
                                </td>
                            </tr>
                        <% }) %>
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            <div class="pagination-container">
                <nav aria-label="Page navigation">
                    <ul class="pagination">
                        <% if (currentPage > 1) { %>
                            <li class="page-item">
                                <a class="page-link" href="?page=<%= currentPage - 1 %>&search=<%= encodeURIComponent(search || '') %>&fromDate=<%= encodeURIComponent(fromDate || '') %>&toDate=<%= encodeURIComponent(toDate || '') %>&status=<%= encodeURIComponent(status || 'All Orders') %>&paymentMethod=<%= encodeURIComponent(paymentMethod || 'All') %>" aria-label="Previous">
                                    <i class="fas fa-chevron-left"></i>
                                </a>
                            </li>
                        <% } else { %>
                            <li class="page-item disabled">
                                <span class="page-link">
                                    <i class="fas fa-chevron-left"></i>
                                </span>
                            </li>
                        <% } %>

                        <% let startPage = Math.max(1, currentPage - 2); %>
                        <% let endPage = Math.min(totalPages, startPage + 4); %>
                        <% if (endPage - startPage < 4 && totalPages > 5) { %>
                            <% startPage = Math.max(1, endPage - 4); %>
                        <% } %>
                        <% for (let i = startPage; i <= endPage; i++) { %>
                            <li class="page-item <%= i === currentPage ? 'active' : '' %>">
                                <a class="page-link" href="?page=<%= i %>&search=<%= encodeURIComponent(search || '') %>&fromDate=<%= encodeURIComponent(fromDate || '') %>&toDate=<%= encodeURIComponent(toDate || '') %>&status=<%= encodeURIComponent(status || 'All Orders') %>&paymentMethod=<%= encodeURIComponent(paymentMethod || 'All') %>">
                                    <%= i %>
                                </a>
                            </li>
                        <% } %>

                        <% if (currentPage < totalPages) { %>
                            <li class="page-item">
                                <a class="page-link" href="?page=<%= currentPage + 1 %>&search=<%= encodeURIComponent(search || '') %>&fromDate=<%= encodeURIComponent(fromDate || '') %>&toDate=<%= encodeURIComponent(toDate || '') %>&status=<%= encodeURIComponent(status || 'All Orders') %>&paymentMethod=<%= encodeURIComponent(paymentMethod || 'All') %>" aria-label="Next">
                                    <i class="fas fa-chevron-right"></i>
                                </a>
                            </li>
                        <% } else { %>
                            <li class="page-item disabled">
                                <span class="page-link">
                                    <i class="fas fa-chevron-right"></i>
                                </span>
                            </li>
                        <% } %>
                    </ul>
                </nav>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script>
  // Initialize Flatpickr for date inputs with proper configuration
  flatpickr("#fromDate", {
    dateFormat: "d/m/Y",
    maxDate: "today",
    onChange: function (selectedDates, dateStr) {
      if (selectedDates[0]) {
        const toDateInput = document.getElementById('toDate');
        if (toDateInput._flatpickr) {
          toDateInput._flatpickr.set('minDate', selectedDates[0]);
        }
      }
      triggerSearch();
    },
  });

  flatpickr("#toDate", {
    dateFormat: "d/m/Y",
    maxDate: "today",
    onChange: function (selectedDates, dateStr) {
      if (selectedDates[0]) {
        const fromDateInput = document.getElementById('fromDate');
        if (fromDateInput._flatpickr) {
          fromDateInput._flatpickr.set('maxDate', selectedDates[0]);
        }
      }
      triggerSearch();
    },
  });


  function debounce(func, delay) {
    let timeoutId;
    return function (...args) {
      clearTimeout(timeoutId);
      timeoutId = setTimeout(() => func.apply(this, args), delay);
    };
  }

  function formatDateForBackend(dateStr) {
    if (!dateStr) return '';
    const [day, month, year] = dateStr.split('/');
    if (!day || !month || !year) return '';
    return `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`;
  }


  let totalPages = parseInt('<%= totalPages %>') || 1;

  // Function to get all search parameters
  function getSearchParams() {
    const searchInput = document.getElementById('searchInput').value.trim();
    const fromDate = formatDateForBackend(document.getElementById('fromDate').value);
    const toDate = formatDateForBackend(document.getElementById('toDate').value);
    const status = document.getElementById('statusFilter').value;
    const paymentMethod = document.getElementById('paymentMethodFilter').value;

    console.log('Search params:', { searchInput, fromDate, toDate, status, paymentMethod });

    return {
      search: searchInput,
      fromDate,
      toDate,
      status,
      paymentMethod,
      page: 1
    };
  }

  // Function to show loading state
  function showLoading() {
    const tbody = document.querySelector('.orders-table tbody');
    tbody.innerHTML = `
      <tr class="table-row">
        <td colspan="8" class="table-cell text-center">
          <div class="d-flex justify-content-center align-items-center">
            <div class="spinner-border text-primary" role="status">
              <span class="visually-hidden">Loading...</span>
            </div>
          </div>
        </td>
      </tr>
    `;
  }

  // Function to show error state
  function showError(message) {
    const tbody = document.querySelector('.orders-table tbody');
    const errorRow = document.createElement('tr');
    errorRow.innerHTML = `
      <td colspan="8" class="text-center py-4 text-red-500">
        ${message}
      </td>
    `;
    tbody.innerHTML = '';
    tbody.appendChild(errorRow);
  }

  // Function to show no results state
  function showNoResults() {
    const tbody = document.querySelector('.orders-table tbody');
    tbody.innerHTML = `
      <tr class="table-row">
        <td colspan="8" class="table-cell text-center">
          <div class="text-muted">
            <i class="fas fa-search fa-2x mb-2"></i>
            <p>No orders found matching your search criteria</p>
          </div>
        </td>
      </tr>
    `;
  }

  const triggerSearch = debounce(function () {
    const params = getSearchParams();
    const queryParams = new URLSearchParams(params);

    console.log('Search URL:', `/admin/order-management?${queryParams.toString()}`);

    showLoading();

    fetch(`/admin/order-management?${queryParams.toString()}`, {
      method: 'GET',
      headers: {
        'Accept': 'application/json',
        'X-Requested-With': 'XMLHttpRequest',
        'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]')?.content || ''
      },
      credentials: 'include'
    })
    .then(response => {
      if (!response.ok) {
        throw new Error(`HTTP error! Status: ${response.status}`);
      }
      return response.json();
    })
    .then(data => {
      console.log('Search results:', data);
      
      if (data.error) {
        throw new Error(data.message || 'An error occurred while searching');
      }
      
      totalPages = data.totalPages;
      if (data.orders && data.orders.length > 0) {
        updateTable(data.orders);
        updatePagination(data.currentPage, data.totalPages, queryParams);
      } else {
        showNoResults();
      }
    })
    .catch(error => {
      console.error('Search error:', error);
      showError(error.message || 'An error occurred while searching. Please try again.');
    });
  }, 400);

  // Update the orders table with new data
  function updateTable(orders) {
    const tbody = document.querySelector('.orders-table tbody');
    tbody.innerHTML = '';

    orders.forEach((order) => {
      if (!order) return;
      
      const row = document.createElement('tr');
      row.classList.add('table-row');

      // Get the main status from orderedItems
      let mainStatus = 'Pending';
      if (order.orderedItems && order.orderedItems.length > 0) {
        const statuses = order.orderedItems.map(item => item.status);
        if (statuses.includes('Cancelled')) mainStatus = 'Cancelled';
        else if (statuses.includes('Pending')) mainStatus = 'Pending';
        else if (statuses.includes('Return Request')) mainStatus = 'Return Request';
        else if (statuses.includes('Returned')) mainStatus = 'Returned';
        else if (statuses.every(status => status === 'Delivered')) mainStatus = 'Delivered';
        else mainStatus = 'Processing';
      }

      const statusClass = 
        mainStatus === 'Pending' ? 'bg-warning' : 
        mainStatus === 'Delivered' ? 'bg-success' : 
        mainStatus === 'Cancelled' ? 'bg-danger' : 
        mainStatus === 'Processing' ? 'bg-info' :
        mainStatus === 'Return Request' ? 'bg-warning' :
        mainStatus === 'Returned' ? 'bg-secondary' :
        'bg-info';

      row.innerHTML = `
        <td class="table-cell">
          <div class="product-image">
            <% if (orders.orderedItems && order.orderedItems.length > 0 && order.orderedItems[0].product && order.orderedItems[0].product.images && order.orderedItems[0].product.images.length > 0) { %>
                <img src="/<%= order.orderedItems[0].product.images[0] %>" alt="Product Image" style="width: 50px; height: 50px; object-fit: cover; border-radius: 8px;">
            <% } else { %>
                📦
            <% } %>
          </div>
        </td>
        <td class="table-cell">
          <span class="order-id">${order.orderId || 'N/A'}</span>
        </td>
        <td class="table-cell">
          <span class="customer-name">${order.shippingAddress?.name || 'N/A'}</span>
        </td>
        <td class="table-cell">${order.createdAt ? new Date(order.createdAt).toDateString() : 'N/A'}</td>
        <td class="table-cell">
          <span class="amount">₹${order.totalPrice || '0'}</span>
        </td>
        <td class="table-cell">
          <span class="payment-method ${(order.paymentMethod || 'card').toLowerCase()}">${order.paymentMethod || 'N/A'}</span>
        </td>
        <td class="table-cell">
          <div class="product-list">
            ${(order.orderedItems || []).map(item => `
              <div class="mb-1">
                <span class="d-block fw-bold">${item.product?.name || ''}</span>
              </div>
            `).join('')}
          </div>
          <div class="status-display mt-2">
            <span class="status badge ${statusClass}">${mainStatus}</span>
          </div>
        </td>
        <td class="table-cell">
          <button class="view-btn" onclick="viewOrderDetails('${order._id}')">VIEW</button>
        </td>
      `;
      tbody.appendChild(row);
    });
  }

  // Update pagination controls
  function updatePagination(currentPage, totalPagesLocal, queryParams) {
    const pagination = document.querySelector('.pagination');
    pagination.innerHTML = '';

    const prevLi = document.createElement('li');
    prevLi.classList.add('page-item');
    if (currentPage === 1) prevLi.classList.add('disabled');
    prevLi.innerHTML = `
      <a class="page-link" href="#" aria-label="Previous" onclick="changePage(${currentPage - 1}, event)">
        <i class="fas fa-chevron-left"></i>
      </a>
    `;
    pagination.appendChild(prevLi);

    let startPage = Math.max(1, currentPage - 2);
    let endPage = Math.min(totalPagesLocal, startPage + 4);
    if (endPage - startPage < 4 && totalPagesLocal > 5) {
      startPage = Math.max(1, endPage - 4);
    }

    for (let i = startPage; i <= endPage; i++) {
      const pageLi = document.createElement('li');
      pageLi.classList.add('page-item');
      if (i === currentPage) pageLi.classList.add('active');
      pageLi.innerHTML = `
        <a class="page-link" href="#" onclick="changePage(${i}, event)">${i}</a>
      `;
      pagination.appendChild(pageLi);
    }

    const nextLi = document.createElement('li');
    nextLi.classList.add('page-item');
    if (currentPage === totalPagesLocal) nextLi.classList.add('disabled');
    nextLi.innerHTML = `
      <a class="page-link" href="#" aria-label="Next" onclick="changePage(${currentPage + 1}, event)">
        <i class="fas fa-chevron-right"></i>
      </a>
    `;
    pagination.appendChild(nextLi);
  }

  // Change page
  function changePage(page, event) {
    event.preventDefault();
    if (page < 1 || page > totalPages) return;

    const params = getSearchParams();
    params.page = page;
    const queryParams = new URLSearchParams(params);

    showLoading();

    fetch(`/admin/order-management?${queryParams.toString()}`, {
      method: 'GET',
      headers: {
        'Accept': 'application/json',
        'X-Requested-With': 'XMLHttpRequest',
        'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]')?.content || ''
      },
      credentials: 'include'
    })
    .then(response => {
      if (!response.ok) {
        throw new Error(`HTTP error! Status: ${response.status}`);
      }
      return response.json();
    })
    .then(data => {
      if (data.error) {
        throw new Error(data.message || 'An error occurred while loading the page');
      }
      totalPages = data.totalPages;
      updateTable(data.orders);
      updatePagination(data.currentPage, data.totalPages, queryParams);
    })
    .catch(error => {
      console.error('Page change error:', error);
      showError(error.message || 'An error occurred while loading the page. Please try again.');
    });
  }

  // Clear search
  function clearSearch() {
    document.getElementById('searchInput').value = '';
    document.getElementById('fromDate').value = '';
    document.getElementById('toDate').value = '';
    document.getElementById('statusFilter').value = 'All Orders';
    document.getElementById('paymentMethodFilter').value = 'All';
    triggerSearch();
  }

  // Event listeners for live search
  document.getElementById('searchInput').addEventListener('input', triggerSearch);
  document.getElementById('statusFilter').addEventListener('change', triggerSearch);
  document.getElementById('paymentMethodFilter').addEventListener('change', triggerSearch);
  document.getElementById('clearBtn').addEventListener('click', clearSearch);

  // View order details
  function viewOrderDetails(orderId) {
    window.location.href = `/admin/order-view/${orderId}`;
  }

  // Toggle sidebar for mobile
  function toggleSidebar() {
    const sidebar = document.getElementById('sidebar');
    sidebar.classList.toggle('open');
  }

  // Close sidebar when clicking outside on mobile
  document.addEventListener('click', function (event) {
    const sidebar = document.getElementById('sidebar');
    const toggleBtn = document.querySelector('.mobile-menu-toggle');
    if (
      window.innerWidth <= 768 &&
      !sidebar.contains(event.target) &&
      !toggleBtn.contains(event.target) &&
      sidebar.classList.contains('open')
    ) {
      sidebar.classList.remove('open');
    }
  });
</script>
</body>
</html>
<%- include("../../views/partials/admin/footer") %>